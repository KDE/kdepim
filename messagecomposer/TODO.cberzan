1) Make it work for plain text (including charset, word wrapping stuff)
2) Figure out headers (groups, display names, empty to:, local usernames, comments?)
3) HTML
4) Transport
5) Attachments
6) Signing & Crypto
+tests at every step.

Questions:
* If multi-recipient-crypto, save all in sent-mail or just one unencrypted copy?
  KMail seems to save the encrypted stuff, but then how can it be decrypted
  without someone's private key?  Or does KMail save a copy encrypted with my own
  key??? --> Now I think that's exactly what it does.
* Why is KeyResolver in KMail and not kleopatra / libkleo???
* Can KMime::Message::Ptr be forward-declared somehow?
* I have no clue how to make this extensible... and Behaviour is already a problem.
* Disable copy constructors of jobs...
* Should drafts be encrypted to self?
* Figure out if MessagePart & family need to be qobjects at all...
* copyright of composer is 1997, can I just say 'KMail authors'?
* rethink error reporting (and write DESIGN). There is KJobUiDelegate too!
* explain "outlook-compatible attachment names"...

Random:
* Think of where shared_ptrs should be used.
* Plain text should still be 7bit if possible, even if html part has to be qupr.
* Consider using a JobUiDelegate for errors...
* Think of a nice macro / template for:
  Q_ASSERT( dynamic_cast<Something*>( obj ) );
  Something *needed = static_cast<Something*>( obj );
