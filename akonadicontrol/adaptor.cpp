/*
 * This file was generated by dbusidl2cpp version 0.4
 * when processing input file foo.xmi
 *
 * dbusidl2cpp is Copyright (C) 2006 Trolltech AS. All rights reserved.
 *
 * This is an auto-generated file.
 */

#ifndef ADAPTOR_CPP_68751148753721
#define ADAPTOR_CPP_68751148753721

#include <QtCore/QObject>
#include <QtCore/QMetaObject>
#include <QtCore/QVariant>
#include <dbus/qdbus.h>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Adaptor class for interface local.Akonadi.Resources
 */
class ResourcesAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "local.Akonadi.Resources")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"local.Akonadi.Resources\" >\n"
"    <method name=\"listAvailableResources\" >\n"
"      <arg direction=\"out\" type=\"as\" />\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    ResourcesAdaptor(QObject *parent);
    virtual ~ResourcesAdaptor();

public: // PROPERTIES
public Q_SLOTS: // METHODS
    QStringList listAvailableResources();
Q_SIGNALS: // SIGNALS
};

#endif
/*
 * Implementation of adaptor class ResourcesAdaptor
 */

ResourcesAdaptor::ResourcesAdaptor(QObject *parent)
   : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

ResourcesAdaptor::~ResourcesAdaptor()
{
    // destructor
}

QStringList ResourcesAdaptor::listAvailableResources()
{
    // handle method call local.Akonadi.Resources.listAvailableResources
    QStringList out0;
    QMetaObject::invokeMethod(parent(), "listAvailableResources", Q_RETURN_ARG(QStringList, out0));

    // Alternative:
    //out0 = static_cast<YourObjectType *>(parent())->listAvailableResources();
    return out0;
}

