/*
 * This file was generated by dbusidl2cpp version 0.5
 * when processing input file org.kde.networkstatus.provider.xml
 *
 * dbusidl2cpp is Copyright (C) 2006 Trolltech AS. All rights reserved.
 *
 * This is an auto-generated file.
 */

#include "provideradaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class ProviderAdaptor
 */

ProviderAdaptor::ProviderAdaptor(QObject *parent)
   : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

ProviderAdaptor::~ProviderAdaptor()
{
    // destructor
}

int ProviderAdaptor::establish(const QString &network)
{
    // handle method call org.kde.networkstatus.provider.establish
    int out0;
    QMetaObject::invokeMethod(parent(), "establish", Q_RETURN_ARG(int, out0), Q_ARG(QString, network));

    // Alternative:
    //out0 = static_cast<YourObjectType *>(parent())->establish(network);
    return out0;
}

int ProviderAdaptor::shutdown(const QString &network)
{
    // handle method call org.kde.networkstatus.provider.shutdown
    int out0;
    QMetaObject::invokeMethod(parent(), "shutdown", Q_RETURN_ARG(int, out0), Q_ARG(QString, network));

    // Alternative:
    //out0 = static_cast<YourObjectType *>(parent())->shutdown(network);
    return out0;
}

void ProviderAdaptor::simulateDisconnect()
{
    // handle method call org.kde.networkstatus.provider.simulateDisconnect
    QMetaObject::invokeMethod(parent(), "simulateDisconnect");

    // Alternative:
    //static_cast<YourObjectType *>(parent())->simulateDisconnect();
}

void ProviderAdaptor::simulateFailure()
{
    // handle method call org.kde.networkstatus.provider.simulateFailure
    QMetaObject::invokeMethod(parent(), "simulateFailure");

    // Alternative:
    //static_cast<YourObjectType *>(parent())->simulateFailure();
}

int ProviderAdaptor::status(const QString &network)
{
    // handle method call org.kde.networkstatus.provider.status
    int out0;
    QMetaObject::invokeMethod(parent(), "status", Q_RETURN_ARG(int, out0), Q_ARG(QString, network));

    // Alternative:
    //out0 = static_cast<YourObjectType *>(parent())->status(network);
    return out0;
}


#include "provideradaptor.moc"
