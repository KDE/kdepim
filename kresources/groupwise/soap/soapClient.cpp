/* soapClient.cpp
   Generated by gSOAP 2.7.3 from ./groupwise.h
   Copyright (C) 2000-2005, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapClient.cpp ver 2.7.3 2006-05-18 13:53:46 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__acceptRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__acceptRequest *ngwm__acceptRequest, _ngwm__acceptResponse *ngwm__acceptResponse)
{	struct __ngw__acceptRequest soap_tmp___ngw__acceptRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "acceptRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__acceptRequest.ngwm__acceptRequest = ngwm__acceptRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__acceptRequest(soap, &soap_tmp___ngw__acceptRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__acceptRequest(soap, &soap_tmp___ngw__acceptRequest, "-ngw:acceptRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__acceptRequest(soap, &soap_tmp___ngw__acceptRequest, "-ngw:acceptRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__acceptResponse)
		return soap_closesock(soap);
	ngwm__acceptResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__acceptResponse->soap_get(soap, "ngwm:acceptResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__acceptShareRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__acceptShareRequest *ngwm__acceptShareRequest, _ngwm__acceptShareResponse *ngwm__acceptShareResponse)
{	struct __ngw__acceptShareRequest soap_tmp___ngw__acceptShareRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "acceptShareRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__acceptShareRequest.ngwm__acceptShareRequest = ngwm__acceptShareRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__acceptShareRequest(soap, &soap_tmp___ngw__acceptShareRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__acceptShareRequest(soap, &soap_tmp___ngw__acceptShareRequest, "-ngw:acceptShareRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__acceptShareRequest(soap, &soap_tmp___ngw__acceptShareRequest, "-ngw:acceptShareRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__acceptShareResponse)
		return soap_closesock(soap);
	ngwm__acceptShareResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__acceptShareResponse->soap_get(soap, "ngwm:acceptShareResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__addItemRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__addItemRequest *ngwm__addItemRequest, _ngwm__addItemResponse *ngwm__addItemResponse)
{	struct __ngw__addItemRequest soap_tmp___ngw__addItemRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "addItemRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__addItemRequest.ngwm__addItemRequest = ngwm__addItemRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__addItemRequest(soap, &soap_tmp___ngw__addItemRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__addItemRequest(soap, &soap_tmp___ngw__addItemRequest, "-ngw:addItemRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__addItemRequest(soap, &soap_tmp___ngw__addItemRequest, "-ngw:addItemRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__addItemResponse)
		return soap_closesock(soap);
	ngwm__addItemResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__addItemResponse->soap_get(soap, "ngwm:addItemResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__addItemsRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__addItemsRequest *ngwm__addItemsRequest, _ngwm__addItemsResponse *ngwm__addItemsResponse)
{	struct __ngw__addItemsRequest soap_tmp___ngw__addItemsRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "addItemsRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__addItemsRequest.ngwm__addItemsRequest = ngwm__addItemsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__addItemsRequest(soap, &soap_tmp___ngw__addItemsRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__addItemsRequest(soap, &soap_tmp___ngw__addItemsRequest, "-ngw:addItemsRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__addItemsRequest(soap, &soap_tmp___ngw__addItemsRequest, "-ngw:addItemsRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__addItemsResponse)
		return soap_closesock(soap);
	ngwm__addItemsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__addItemsResponse->soap_get(soap, "ngwm:addItemsResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__addMembersRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__addMembersRequest *ngwm__addMembersRequest, _ngwm__addMembersResponse *ngwm__addMembersResponse)
{	struct __ngw__addMembersRequest soap_tmp___ngw__addMembersRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "addMembersRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__addMembersRequest.ngwm__addMembersRequest = ngwm__addMembersRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__addMembersRequest(soap, &soap_tmp___ngw__addMembersRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__addMembersRequest(soap, &soap_tmp___ngw__addMembersRequest, "-ngw:addMembersRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__addMembersRequest(soap, &soap_tmp___ngw__addMembersRequest, "-ngw:addMembersRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__addMembersResponse)
		return soap_closesock(soap);
	ngwm__addMembersResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__addMembersResponse->soap_get(soap, "ngwm:addMembersResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__closeFreeBusySessionRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__closeFreeBusySessionRequest *ngwm__closeFreeBusySessionRequest, _ngwm__closeFreeBusySessionResponse *ngwm__closeFreeBusySessionResponse)
{	struct __ngw__closeFreeBusySessionRequest soap_tmp___ngw__closeFreeBusySessionRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "closeFreeBusySessionRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__closeFreeBusySessionRequest.ngwm__closeFreeBusySessionRequest = ngwm__closeFreeBusySessionRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__closeFreeBusySessionRequest(soap, &soap_tmp___ngw__closeFreeBusySessionRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__closeFreeBusySessionRequest(soap, &soap_tmp___ngw__closeFreeBusySessionRequest, "-ngw:closeFreeBusySessionRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__closeFreeBusySessionRequest(soap, &soap_tmp___ngw__closeFreeBusySessionRequest, "-ngw:closeFreeBusySessionRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__closeFreeBusySessionResponse)
		return soap_closesock(soap);
	ngwm__closeFreeBusySessionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__closeFreeBusySessionResponse->soap_get(soap, "ngwm:closeFreeBusySessionResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__completeRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__completeRequest *ngwm__completeRequest, _ngwm__completeResponse *ngwm__completeResponse)
{	struct __ngw__completeRequest soap_tmp___ngw__completeRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "completeRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__completeRequest.ngwm__completeRequest = ngwm__completeRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__completeRequest(soap, &soap_tmp___ngw__completeRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__completeRequest(soap, &soap_tmp___ngw__completeRequest, "-ngw:completeRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__completeRequest(soap, &soap_tmp___ngw__completeRequest, "-ngw:completeRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__completeResponse)
		return soap_closesock(soap);
	ngwm__completeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__completeResponse->soap_get(soap, "ngwm:completeResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__createCursorRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__createCursorRequest *ngwm__createCursorRequest, _ngwm__createCursorResponse *ngwm__createCursorResponse)
{	struct __ngw__createCursorRequest soap_tmp___ngw__createCursorRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "createCursorRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__createCursorRequest.ngwm__createCursorRequest = ngwm__createCursorRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__createCursorRequest(soap, &soap_tmp___ngw__createCursorRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__createCursorRequest(soap, &soap_tmp___ngw__createCursorRequest, "-ngw:createCursorRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__createCursorRequest(soap, &soap_tmp___ngw__createCursorRequest, "-ngw:createCursorRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__createCursorResponse)
		return soap_closesock(soap);
	ngwm__createCursorResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__createCursorResponse->soap_get(soap, "ngwm:createCursorResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__createItemRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__createItemRequest *ngwm__createItemRequest, _ngwm__createItemResponse *ngwm__createItemResponse)
{	struct __ngw__createItemRequest soap_tmp___ngw__createItemRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "createItemRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__createItemRequest.ngwm__createItemRequest = ngwm__createItemRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__createItemRequest(soap, &soap_tmp___ngw__createItemRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__createItemRequest(soap, &soap_tmp___ngw__createItemRequest, "-ngw:createItemRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__createItemRequest(soap, &soap_tmp___ngw__createItemRequest, "-ngw:createItemRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__createItemResponse)
		return soap_closesock(soap);
	ngwm__createItemResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__createItemResponse->soap_get(soap, "ngwm:createItemResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__createItemsRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__createItemsRequest *ngwm__createItemsRequest, _ngwm__createItemsResponse *ngwm__createItemsResponse)
{	struct __ngw__createItemsRequest soap_tmp___ngw__createItemsRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "createItemsRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__createItemsRequest.ngwm__createItemsRequest = ngwm__createItemsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__createItemsRequest(soap, &soap_tmp___ngw__createItemsRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__createItemsRequest(soap, &soap_tmp___ngw__createItemsRequest, "-ngw:createItemsRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__createItemsRequest(soap, &soap_tmp___ngw__createItemsRequest, "-ngw:createItemsRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__createItemsResponse)
		return soap_closesock(soap);
	ngwm__createItemsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__createItemsResponse->soap_get(soap, "ngwm:createItemsResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__createJunkEntryRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__createJunkEntryRequest *ngwm__createJunkEntryRequest, _ngwm__createJunkEntryResponse *ngwm__createJunkEntryResponse)
{	struct __ngw__createJunkEntryRequest soap_tmp___ngw__createJunkEntryRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "createJunkEntryRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__createJunkEntryRequest.ngwm__createJunkEntryRequest = ngwm__createJunkEntryRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__createJunkEntryRequest(soap, &soap_tmp___ngw__createJunkEntryRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__createJunkEntryRequest(soap, &soap_tmp___ngw__createJunkEntryRequest, "-ngw:createJunkEntryRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__createJunkEntryRequest(soap, &soap_tmp___ngw__createJunkEntryRequest, "-ngw:createJunkEntryRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__createJunkEntryResponse)
		return soap_closesock(soap);
	ngwm__createJunkEntryResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__createJunkEntryResponse->soap_get(soap, "ngwm:createJunkEntryResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__createProxyAccessRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__createProxyAccessRequest *ngwm__createProxyAccessRequest, _ngwm__createProxyAccessResponse *ngwm__createProxyAccessResponse)
{	struct __ngw__createProxyAccessRequest soap_tmp___ngw__createProxyAccessRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "createProxyAccessRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__createProxyAccessRequest.ngwm__createProxyAccessRequest = ngwm__createProxyAccessRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__createProxyAccessRequest(soap, &soap_tmp___ngw__createProxyAccessRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__createProxyAccessRequest(soap, &soap_tmp___ngw__createProxyAccessRequest, "-ngw:createProxyAccessRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__createProxyAccessRequest(soap, &soap_tmp___ngw__createProxyAccessRequest, "-ngw:createProxyAccessRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__createProxyAccessResponse)
		return soap_closesock(soap);
	ngwm__createProxyAccessResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__createProxyAccessResponse->soap_get(soap, "ngwm:createProxyAccessResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__createSignatureRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__createSignatureRequest *ngwm__createSignatureRequest, _ngwm__createSignatureResponse *ngwm__createSignatureResponse)
{	struct __ngw__createSignatureRequest soap_tmp___ngw__createSignatureRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "createSignatureRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__createSignatureRequest.ngwm__createSignatureRequest = ngwm__createSignatureRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__createSignatureRequest(soap, &soap_tmp___ngw__createSignatureRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__createSignatureRequest(soap, &soap_tmp___ngw__createSignatureRequest, "-ngw:createSignatureRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__createSignatureRequest(soap, &soap_tmp___ngw__createSignatureRequest, "-ngw:createSignatureRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__createSignatureResponse)
		return soap_closesock(soap);
	ngwm__createSignatureResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__createSignatureResponse->soap_get(soap, "ngwm:createSignatureResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__declineRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__declineRequest *ngwm__declineRequest, _ngwm__declineResponse *ngwm__declineResponse)
{	struct __ngw__declineRequest soap_tmp___ngw__declineRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "declineRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__declineRequest.ngwm__declineRequest = ngwm__declineRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__declineRequest(soap, &soap_tmp___ngw__declineRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__declineRequest(soap, &soap_tmp___ngw__declineRequest, "-ngw:declineRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__declineRequest(soap, &soap_tmp___ngw__declineRequest, "-ngw:declineRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__declineResponse)
		return soap_closesock(soap);
	ngwm__declineResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__declineResponse->soap_get(soap, "ngwm:declineResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__delegateRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__delegateRequest *ngwm__delegateRequest, _ngwm__delegateResponse *ngwm__delegateResponse)
{	struct __ngw__delegateRequest soap_tmp___ngw__delegateRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "delegateRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__delegateRequest.ngwm__delegateRequest = ngwm__delegateRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__delegateRequest(soap, &soap_tmp___ngw__delegateRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__delegateRequest(soap, &soap_tmp___ngw__delegateRequest, "-ngw:delegateRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__delegateRequest(soap, &soap_tmp___ngw__delegateRequest, "-ngw:delegateRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__delegateResponse)
		return soap_closesock(soap);
	ngwm__delegateResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__delegateResponse->soap_get(soap, "ngwm:delegateResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__destroyCursorRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__destroyCursorRequest *ngwm__destroyCursorRequest, _ngwm__destroyCursorResponse *ngwm__destroyCursorResponse)
{	struct __ngw__destroyCursorRequest soap_tmp___ngw__destroyCursorRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "destroyCursorRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__destroyCursorRequest.ngwm__destroyCursorRequest = ngwm__destroyCursorRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__destroyCursorRequest(soap, &soap_tmp___ngw__destroyCursorRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__destroyCursorRequest(soap, &soap_tmp___ngw__destroyCursorRequest, "-ngw:destroyCursorRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__destroyCursorRequest(soap, &soap_tmp___ngw__destroyCursorRequest, "-ngw:destroyCursorRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__destroyCursorResponse)
		return soap_closesock(soap);
	ngwm__destroyCursorResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__destroyCursorResponse->soap_get(soap, "ngwm:destroyCursorResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__executeRuleRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__executeRuleRequest *ngwm__executeRuleRequest, _ngwm__executeRuleResponse *ngwm__executeRuleResponse)
{	struct __ngw__executeRuleRequest soap_tmp___ngw__executeRuleRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "executeRuleRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__executeRuleRequest.ngwm__executeRuleRequest = ngwm__executeRuleRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__executeRuleRequest(soap, &soap_tmp___ngw__executeRuleRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__executeRuleRequest(soap, &soap_tmp___ngw__executeRuleRequest, "-ngw:executeRuleRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__executeRuleRequest(soap, &soap_tmp___ngw__executeRuleRequest, "-ngw:executeRuleRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__executeRuleResponse)
		return soap_closesock(soap);
	ngwm__executeRuleResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__executeRuleResponse->soap_get(soap, "ngwm:executeRuleResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__forwardRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__forwardRequest *ngwm__forwardRequest, _ngwm__forwardResponse *ngwm__forwardResponse)
{	struct __ngw__forwardRequest soap_tmp___ngw__forwardRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "forwardRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__forwardRequest.ngwm__forwardRequest = ngwm__forwardRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__forwardRequest(soap, &soap_tmp___ngw__forwardRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__forwardRequest(soap, &soap_tmp___ngw__forwardRequest, "-ngw:forwardRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__forwardRequest(soap, &soap_tmp___ngw__forwardRequest, "-ngw:forwardRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__forwardResponse)
		return soap_closesock(soap);
	ngwm__forwardResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__forwardResponse->soap_get(soap, "ngwm:forwardResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__getAddressBookListRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__getAddressBookListRequest *ngwm__getAddressBookListRequest, _ngwm__getAddressBookListResponse *ngwm__getAddressBookListResponse)
{	struct __ngw__getAddressBookListRequest soap_tmp___ngw__getAddressBookListRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "getAddressBookListRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__getAddressBookListRequest.ngwm__getAddressBookListRequest = ngwm__getAddressBookListRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__getAddressBookListRequest(soap, &soap_tmp___ngw__getAddressBookListRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__getAddressBookListRequest(soap, &soap_tmp___ngw__getAddressBookListRequest, "-ngw:getAddressBookListRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__getAddressBookListRequest(soap, &soap_tmp___ngw__getAddressBookListRequest, "-ngw:getAddressBookListRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__getAddressBookListResponse)
		return soap_closesock(soap);
	ngwm__getAddressBookListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__getAddressBookListResponse->soap_get(soap, "ngwm:getAddressBookListResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__getAttachmentRequestMessage(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__getAttachmentRequest *ngwm__getAttachmentRequest, _ngwm__getAttachmentResponse *ngwm__getAttachmentResponse)
{	struct __ngw__getAttachmentRequestMessage soap_tmp___ngw__getAttachmentRequestMessage;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "getAttachmentRequestMessage";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__getAttachmentRequestMessage.ngwm__getAttachmentRequest = ngwm__getAttachmentRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__getAttachmentRequestMessage(soap, &soap_tmp___ngw__getAttachmentRequestMessage);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__getAttachmentRequestMessage(soap, &soap_tmp___ngw__getAttachmentRequestMessage, "-ngw:getAttachmentRequestMessage", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__getAttachmentRequestMessage(soap, &soap_tmp___ngw__getAttachmentRequestMessage, "-ngw:getAttachmentRequestMessage", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__getAttachmentResponse)
		return soap_closesock(soap);
	ngwm__getAttachmentResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__getAttachmentResponse->soap_get(soap, "ngwm:getAttachmentResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__getCategoryListRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__getCategoryListRequest *ngwm__getCategoryListRequest, _ngwm__getCategoryListResponse *ngwm__getCategoryListResponse)
{	struct __ngw__getCategoryListRequest soap_tmp___ngw__getCategoryListRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "getCategoryListRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__getCategoryListRequest.ngwm__getCategoryListRequest = ngwm__getCategoryListRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__getCategoryListRequest(soap, &soap_tmp___ngw__getCategoryListRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__getCategoryListRequest(soap, &soap_tmp___ngw__getCategoryListRequest, "-ngw:getCategoryListRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__getCategoryListRequest(soap, &soap_tmp___ngw__getCategoryListRequest, "-ngw:getCategoryListRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__getCategoryListResponse)
		return soap_closesock(soap);
	ngwm__getCategoryListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__getCategoryListResponse->soap_get(soap, "ngwm:getCategoryListResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__getCustomListRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__getCustomListRequest *ngwm__getCustomListRequest, _ngwm__getCustomListResponse *ngwm__getCustomListResponse)
{	struct __ngw__getCustomListRequest soap_tmp___ngw__getCustomListRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "getCustomListRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__getCustomListRequest.ngwm__getCustomListRequest = ngwm__getCustomListRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__getCustomListRequest(soap, &soap_tmp___ngw__getCustomListRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__getCustomListRequest(soap, &soap_tmp___ngw__getCustomListRequest, "-ngw:getCustomListRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__getCustomListRequest(soap, &soap_tmp___ngw__getCustomListRequest, "-ngw:getCustomListRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__getCustomListResponse)
		return soap_closesock(soap);
	ngwm__getCustomListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__getCustomListResponse->soap_get(soap, "ngwm:getCustomListResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__getDeltasRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__getDeltasRequest *ngwm__getDeltasRequest, _ngwm__getDeltasResponse *ngwm__getDeltasResponse)
{	struct __ngw__getDeltasRequest soap_tmp___ngw__getDeltasRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "getDeltasRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__getDeltasRequest.ngwm__getDeltasRequest = ngwm__getDeltasRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__getDeltasRequest(soap, &soap_tmp___ngw__getDeltasRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__getDeltasRequest(soap, &soap_tmp___ngw__getDeltasRequest, "-ngw:getDeltasRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__getDeltasRequest(soap, &soap_tmp___ngw__getDeltasRequest, "-ngw:getDeltasRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__getDeltasResponse)
		return soap_closesock(soap);
	ngwm__getDeltasResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__getDeltasResponse->soap_get(soap, "ngwm:getDeltasResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__getDeltaInfoRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__getDeltaInfoRequest *ngwm__getDeltaInfoRequest, _ngwm__getDeltaInfoResponse *ngwm__getDeltaInfoResponse)
{	struct __ngw__getDeltaInfoRequest soap_tmp___ngw__getDeltaInfoRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "getDeltaInfoRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__getDeltaInfoRequest.ngwm__getDeltaInfoRequest = ngwm__getDeltaInfoRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__getDeltaInfoRequest(soap, &soap_tmp___ngw__getDeltaInfoRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__getDeltaInfoRequest(soap, &soap_tmp___ngw__getDeltaInfoRequest, "-ngw:getDeltaInfoRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__getDeltaInfoRequest(soap, &soap_tmp___ngw__getDeltaInfoRequest, "-ngw:getDeltaInfoRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__getDeltaInfoResponse)
		return soap_closesock(soap);
	ngwm__getDeltaInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__getDeltaInfoResponse->soap_get(soap, "ngwm:getDeltaInfoResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__getDocumentTypeListRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__getDocumentTypeListRequest *ngwm__getDocumentTypeListRequest, _ngwm__getDocumentTypeListResponse *ngwm__getDocumentTypeListResponse)
{	struct __ngw__getDocumentTypeListRequest soap_tmp___ngw__getDocumentTypeListRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "getDocumentTypeListRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__getDocumentTypeListRequest.ngwm__getDocumentTypeListRequest = ngwm__getDocumentTypeListRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__getDocumentTypeListRequest(soap, &soap_tmp___ngw__getDocumentTypeListRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__getDocumentTypeListRequest(soap, &soap_tmp___ngw__getDocumentTypeListRequest, "-ngw:getDocumentTypeListRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__getDocumentTypeListRequest(soap, &soap_tmp___ngw__getDocumentTypeListRequest, "-ngw:getDocumentTypeListRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__getDocumentTypeListResponse)
		return soap_closesock(soap);
	ngwm__getDocumentTypeListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__getDocumentTypeListResponse->soap_get(soap, "ngwm:getDocumentTypeListResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__getFolderRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__getFolderRequest *ngwm__getFolderRequest, _ngwm__getFolderResponse *ngwm__getFolderResponse)
{	struct __ngw__getFolderRequest soap_tmp___ngw__getFolderRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "getFolderRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__getFolderRequest.ngwm__getFolderRequest = ngwm__getFolderRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__getFolderRequest(soap, &soap_tmp___ngw__getFolderRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__getFolderRequest(soap, &soap_tmp___ngw__getFolderRequest, "-ngw:getFolderRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__getFolderRequest(soap, &soap_tmp___ngw__getFolderRequest, "-ngw:getFolderRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__getFolderResponse)
		return soap_closesock(soap);
	ngwm__getFolderResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__getFolderResponse->soap_get(soap, "ngwm:getFolderResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__getFolderListRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__getFolderListRequest *ngwm__getFolderListRequest, _ngwm__getFolderListResponse *ngwm__getFolderListResponse)
{	struct __ngw__getFolderListRequest soap_tmp___ngw__getFolderListRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "getFolderListRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__getFolderListRequest.ngwm__getFolderListRequest = ngwm__getFolderListRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__getFolderListRequest(soap, &soap_tmp___ngw__getFolderListRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__getFolderListRequest(soap, &soap_tmp___ngw__getFolderListRequest, "-ngw:getFolderListRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__getFolderListRequest(soap, &soap_tmp___ngw__getFolderListRequest, "-ngw:getFolderListRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__getFolderListResponse)
		return soap_closesock(soap);
	ngwm__getFolderListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__getFolderListResponse->soap_get(soap, "ngwm:getFolderListResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__getFreeBusyRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__getFreeBusyRequest *ngwm__getFreeBusyRequest, _ngwm__getFreeBusyResponse *ngwm__getFreeBusyResponse)
{	struct __ngw__getFreeBusyRequest soap_tmp___ngw__getFreeBusyRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "getFreeBusyRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__getFreeBusyRequest.ngwm__getFreeBusyRequest = ngwm__getFreeBusyRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__getFreeBusyRequest(soap, &soap_tmp___ngw__getFreeBusyRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__getFreeBusyRequest(soap, &soap_tmp___ngw__getFreeBusyRequest, "-ngw:getFreeBusyRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__getFreeBusyRequest(soap, &soap_tmp___ngw__getFreeBusyRequest, "-ngw:getFreeBusyRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__getFreeBusyResponse)
		return soap_closesock(soap);
	ngwm__getFreeBusyResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__getFreeBusyResponse->soap_get(soap, "ngwm:getFreeBusyResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__getItemRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__getItemRequest *ngwm__getItemRequest, _ngwm__getItemResponse *ngwm__getItemResponse)
{	struct __ngw__getItemRequest soap_tmp___ngw__getItemRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "getItemRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__getItemRequest.ngwm__getItemRequest = ngwm__getItemRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__getItemRequest(soap, &soap_tmp___ngw__getItemRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__getItemRequest(soap, &soap_tmp___ngw__getItemRequest, "-ngw:getItemRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__getItemRequest(soap, &soap_tmp___ngw__getItemRequest, "-ngw:getItemRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__getItemResponse)
		return soap_closesock(soap);
	ngwm__getItemResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__getItemResponse->soap_get(soap, "ngwm:getItemResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__getItemsRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__getItemsRequest *ngwm__getItemsRequest, _ngwm__getItemsResponse *ngwm__getItemsResponse)
{	struct __ngw__getItemsRequest soap_tmp___ngw__getItemsRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "getItemsRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__getItemsRequest.ngwm__getItemsRequest = ngwm__getItemsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__getItemsRequest(soap, &soap_tmp___ngw__getItemsRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__getItemsRequest(soap, &soap_tmp___ngw__getItemsRequest, "-ngw:getItemsRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__getItemsRequest(soap, &soap_tmp___ngw__getItemsRequest, "-ngw:getItemsRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__getItemsResponse)
		return soap_closesock(soap);
	ngwm__getItemsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__getItemsResponse->soap_get(soap, "ngwm:getItemsResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__getJunkEntriesRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__getJunkEntriesRequest *ngwm__getJunkEntriesRequest, _ngwm__getJunkEntriesResponse *ngwm__getJunkEntriesResponse)
{	struct __ngw__getJunkEntriesRequest soap_tmp___ngw__getJunkEntriesRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "getJunkEntriesRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__getJunkEntriesRequest.ngwm__getJunkEntriesRequest = ngwm__getJunkEntriesRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__getJunkEntriesRequest(soap, &soap_tmp___ngw__getJunkEntriesRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__getJunkEntriesRequest(soap, &soap_tmp___ngw__getJunkEntriesRequest, "-ngw:getJunkEntriesRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__getJunkEntriesRequest(soap, &soap_tmp___ngw__getJunkEntriesRequest, "-ngw:getJunkEntriesRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__getJunkEntriesResponse)
		return soap_closesock(soap);
	ngwm__getJunkEntriesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__getJunkEntriesResponse->soap_get(soap, "ngwm:getJunkEntriesResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__getJunkMailSettingsRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__getJunkMailSettingsRequest *ngwm__getJunkMailSettingsRequest, _ngwm__getJunkMailSettingsResponse *ngwm__getJunkMailSettingsResponse)
{	struct __ngw__getJunkMailSettingsRequest soap_tmp___ngw__getJunkMailSettingsRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "getJunkMailSettingsRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__getJunkMailSettingsRequest.ngwm__getJunkMailSettingsRequest = ngwm__getJunkMailSettingsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__getJunkMailSettingsRequest(soap, &soap_tmp___ngw__getJunkMailSettingsRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__getJunkMailSettingsRequest(soap, &soap_tmp___ngw__getJunkMailSettingsRequest, "-ngw:getJunkMailSettingsRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__getJunkMailSettingsRequest(soap, &soap_tmp___ngw__getJunkMailSettingsRequest, "-ngw:getJunkMailSettingsRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__getJunkMailSettingsResponse)
		return soap_closesock(soap);
	ngwm__getJunkMailSettingsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__getJunkMailSettingsResponse->soap_get(soap, "ngwm:getJunkMailSettingsResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__getLibraryItemRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__getLibraryItemRequest *ngwm__getLibraryItemRequest, _ngwm__getLibraryItemResponse *ngwm__getLibraryItemResponse)
{	struct __ngw__getLibraryItemRequest soap_tmp___ngw__getLibraryItemRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "getLibraryItemRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__getLibraryItemRequest.ngwm__getLibraryItemRequest = ngwm__getLibraryItemRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__getLibraryItemRequest(soap, &soap_tmp___ngw__getLibraryItemRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__getLibraryItemRequest(soap, &soap_tmp___ngw__getLibraryItemRequest, "-ngw:getLibraryItemRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__getLibraryItemRequest(soap, &soap_tmp___ngw__getLibraryItemRequest, "-ngw:getLibraryItemRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__getLibraryItemResponse)
		return soap_closesock(soap);
	ngwm__getLibraryItemResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__getLibraryItemResponse->soap_get(soap, "ngwm:getLibraryItemResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__getLibraryListRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__getLibraryListRequest *ngwm__getLibraryListRequest, _ngwm__getLibraryListResponse *ngwm__getLibraryListResponse)
{	struct __ngw__getLibraryListRequest soap_tmp___ngw__getLibraryListRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "getLibraryListRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__getLibraryListRequest.ngwm__getLibraryListRequest = ngwm__getLibraryListRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__getLibraryListRequest(soap, &soap_tmp___ngw__getLibraryListRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__getLibraryListRequest(soap, &soap_tmp___ngw__getLibraryListRequest, "-ngw:getLibraryListRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__getLibraryListRequest(soap, &soap_tmp___ngw__getLibraryListRequest, "-ngw:getLibraryListRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__getLibraryListResponse)
		return soap_closesock(soap);
	ngwm__getLibraryListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__getLibraryListResponse->soap_get(soap, "ngwm:getLibraryListResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__getQuickMessagesRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__getQuickMessagesRequest *ngwm__getQuickMessagesRequest, _ngwm__getQuickMessagesResponse *ngwm__getQuickMessagesResponse)
{	struct __ngw__getQuickMessagesRequest soap_tmp___ngw__getQuickMessagesRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "getQuickMessagesRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__getQuickMessagesRequest.ngwm__getQuickMessagesRequest = ngwm__getQuickMessagesRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__getQuickMessagesRequest(soap, &soap_tmp___ngw__getQuickMessagesRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__getQuickMessagesRequest(soap, &soap_tmp___ngw__getQuickMessagesRequest, "-ngw:getQuickMessagesRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__getQuickMessagesRequest(soap, &soap_tmp___ngw__getQuickMessagesRequest, "-ngw:getQuickMessagesRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__getQuickMessagesResponse)
		return soap_closesock(soap);
	ngwm__getQuickMessagesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__getQuickMessagesResponse->soap_get(soap, "ngwm:getQuickMessagesResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__getProxyAccessListRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__getProxyAccessListRequest *ngwm__getProxyAccessListRequest, _ngwm__getProxyAccessListResponse *ngwm__getProxyAccessListResponse)
{	struct __ngw__getProxyAccessListRequest soap_tmp___ngw__getProxyAccessListRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "getProxyAccessListRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__getProxyAccessListRequest.ngwm__getProxyAccessListRequest = ngwm__getProxyAccessListRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__getProxyAccessListRequest(soap, &soap_tmp___ngw__getProxyAccessListRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__getProxyAccessListRequest(soap, &soap_tmp___ngw__getProxyAccessListRequest, "-ngw:getProxyAccessListRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__getProxyAccessListRequest(soap, &soap_tmp___ngw__getProxyAccessListRequest, "-ngw:getProxyAccessListRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__getProxyAccessListResponse)
		return soap_closesock(soap);
	ngwm__getProxyAccessListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__getProxyAccessListResponse->soap_get(soap, "ngwm:getProxyAccessListResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__getProxyListRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__getProxyListRequest *ngwm__getProxyListRequest, _ngwm__getProxyListResponse *ngwm__getProxyListResponse)
{	struct __ngw__getProxyListRequest soap_tmp___ngw__getProxyListRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "getProxyListRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__getProxyListRequest.ngwm__getProxyListRequest = ngwm__getProxyListRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__getProxyListRequest(soap, &soap_tmp___ngw__getProxyListRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__getProxyListRequest(soap, &soap_tmp___ngw__getProxyListRequest, "-ngw:getProxyListRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__getProxyListRequest(soap, &soap_tmp___ngw__getProxyListRequest, "-ngw:getProxyListRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__getProxyListResponse)
		return soap_closesock(soap);
	ngwm__getProxyListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__getProxyListResponse->soap_get(soap, "ngwm:getProxyListResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__getRuleListRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__getRuleListRequest *ngwm__getRuleListRequest, _ngwm__getRuleListResponse *ngwm__getRuleListResponse)
{	struct __ngw__getRuleListRequest soap_tmp___ngw__getRuleListRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "getRuleListRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__getRuleListRequest.ngwm__getRuleListRequest = ngwm__getRuleListRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__getRuleListRequest(soap, &soap_tmp___ngw__getRuleListRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__getRuleListRequest(soap, &soap_tmp___ngw__getRuleListRequest, "-ngw:getRuleListRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__getRuleListRequest(soap, &soap_tmp___ngw__getRuleListRequest, "-ngw:getRuleListRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__getRuleListResponse)
		return soap_closesock(soap);
	ngwm__getRuleListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__getRuleListResponse->soap_get(soap, "ngwm:getRuleListResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__getSettingsRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__getSettingsRequest *ngwm__getSettingsRequest, _ngwm__getSettingsResponse *ngwm__getSettingsResponse)
{	struct __ngw__getSettingsRequest soap_tmp___ngw__getSettingsRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "getSettingsRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__getSettingsRequest.ngwm__getSettingsRequest = ngwm__getSettingsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__getSettingsRequest(soap, &soap_tmp___ngw__getSettingsRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__getSettingsRequest(soap, &soap_tmp___ngw__getSettingsRequest, "-ngw:getSettingsRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__getSettingsRequest(soap, &soap_tmp___ngw__getSettingsRequest, "-ngw:getSettingsRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__getSettingsResponse)
		return soap_closesock(soap);
	ngwm__getSettingsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__getSettingsResponse->soap_get(soap, "ngwm:getSettingsResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__getSignaturesRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__getSignaturesRequest *ngwm__getSignaturesRequest, _ngwm__getSignaturesResponse *ngwm__getSignaturesResponse)
{	struct __ngw__getSignaturesRequest soap_tmp___ngw__getSignaturesRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "getSignaturesRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__getSignaturesRequest.ngwm__getSignaturesRequest = ngwm__getSignaturesRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__getSignaturesRequest(soap, &soap_tmp___ngw__getSignaturesRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__getSignaturesRequest(soap, &soap_tmp___ngw__getSignaturesRequest, "-ngw:getSignaturesRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__getSignaturesRequest(soap, &soap_tmp___ngw__getSignaturesRequest, "-ngw:getSignaturesRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__getSignaturesResponse)
		return soap_closesock(soap);
	ngwm__getSignaturesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__getSignaturesResponse->soap_get(soap, "ngwm:getSignaturesResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__getTimestampRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__getTimestampRequest *ngwm__getTimestampRequest, _ngwm__getTimestampResponse *ngwm__getTimestampResponse)
{	struct __ngw__getTimestampRequest soap_tmp___ngw__getTimestampRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "getTimestampRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__getTimestampRequest.ngwm__getTimestampRequest = ngwm__getTimestampRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__getTimestampRequest(soap, &soap_tmp___ngw__getTimestampRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__getTimestampRequest(soap, &soap_tmp___ngw__getTimestampRequest, "-ngw:getTimestampRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__getTimestampRequest(soap, &soap_tmp___ngw__getTimestampRequest, "-ngw:getTimestampRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__getTimestampResponse)
		return soap_closesock(soap);
	ngwm__getTimestampResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__getTimestampResponse->soap_get(soap, "ngwm:getTimestampResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__getTimezoneListRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__getTimezoneListRequest *ngwm__getTimezoneListRequest, _ngwm__getTimezoneListResponse *ngwm__getTimezoneListResponse)
{	struct __ngw__getTimezoneListRequest soap_tmp___ngw__getTimezoneListRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "getTimezoneListRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__getTimezoneListRequest.ngwm__getTimezoneListRequest = ngwm__getTimezoneListRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__getTimezoneListRequest(soap, &soap_tmp___ngw__getTimezoneListRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__getTimezoneListRequest(soap, &soap_tmp___ngw__getTimezoneListRequest, "-ngw:getTimezoneListRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__getTimezoneListRequest(soap, &soap_tmp___ngw__getTimezoneListRequest, "-ngw:getTimezoneListRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__getTimezoneListResponse)
		return soap_closesock(soap);
	ngwm__getTimezoneListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__getTimezoneListResponse->soap_get(soap, "ngwm:getTimezoneListResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__getUserListRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__getUserListRequest *ngwm__getUserListRequest, _ngwm__getUserListResponse *ngwm__getUserListResponse)
{	struct __ngw__getUserListRequest soap_tmp___ngw__getUserListRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "getUserListRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__getUserListRequest.ngwm__getUserListRequest = ngwm__getUserListRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__getUserListRequest(soap, &soap_tmp___ngw__getUserListRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__getUserListRequest(soap, &soap_tmp___ngw__getUserListRequest, "-ngw:getUserListRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__getUserListRequest(soap, &soap_tmp___ngw__getUserListRequest, "-ngw:getUserListRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__getUserListResponse)
		return soap_closesock(soap);
	ngwm__getUserListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__getUserListResponse->soap_get(soap, "ngwm:getUserListResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__loginRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__loginRequest *ngwm__loginRequest, _ngwm__loginResponse *ngwm__loginResponse)
{	struct __ngw__loginRequest soap_tmp___ngw__loginRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "loginRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__loginRequest.ngwm__loginRequest = ngwm__loginRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__loginRequest(soap, &soap_tmp___ngw__loginRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__loginRequest(soap, &soap_tmp___ngw__loginRequest, "-ngw:loginRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__loginRequest(soap, &soap_tmp___ngw__loginRequest, "-ngw:loginRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__loginResponse)
		return soap_closesock(soap);
	ngwm__loginResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__loginResponse->soap_get(soap, "ngwm:loginResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__logoutRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__logoutRequest *ngwm__logoutRequest, _ngwm__logoutResponse *ngwm__logoutResponse)
{	struct __ngw__logoutRequest soap_tmp___ngw__logoutRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "logoutRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__logoutRequest.ngwm__logoutRequest = ngwm__logoutRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__logoutRequest(soap, &soap_tmp___ngw__logoutRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__logoutRequest(soap, &soap_tmp___ngw__logoutRequest, "-ngw:logoutRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__logoutRequest(soap, &soap_tmp___ngw__logoutRequest, "-ngw:logoutRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__logoutResponse)
		return soap_closesock(soap);
	ngwm__logoutResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__logoutResponse->soap_get(soap, "ngwm:logoutResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__markPrivateRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__markPrivateRequest *ngwm__markPrivateRequest, _ngwm__markPrivateResponse *ngwm__markPrivateResponse)
{	struct __ngw__markPrivateRequest soap_tmp___ngw__markPrivateRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "markPrivateRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__markPrivateRequest.ngwm__markPrivateRequest = ngwm__markPrivateRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__markPrivateRequest(soap, &soap_tmp___ngw__markPrivateRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__markPrivateRequest(soap, &soap_tmp___ngw__markPrivateRequest, "-ngw:markPrivateRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__markPrivateRequest(soap, &soap_tmp___ngw__markPrivateRequest, "-ngw:markPrivateRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__markPrivateResponse)
		return soap_closesock(soap);
	ngwm__markPrivateResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__markPrivateResponse->soap_get(soap, "ngwm:markPrivateResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__markReadRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__markReadRequest *ngwm__markReadRequest, _ngwm__markReadResponse *ngwm__markReadResponse)
{	struct __ngw__markReadRequest soap_tmp___ngw__markReadRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "markReadRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__markReadRequest.ngwm__markReadRequest = ngwm__markReadRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__markReadRequest(soap, &soap_tmp___ngw__markReadRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__markReadRequest(soap, &soap_tmp___ngw__markReadRequest, "-ngw:markReadRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__markReadRequest(soap, &soap_tmp___ngw__markReadRequest, "-ngw:markReadRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__markReadResponse)
		return soap_closesock(soap);
	ngwm__markReadResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__markReadResponse->soap_get(soap, "ngwm:markReadResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__markUnPrivateRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__markUnPrivateRequest *ngwm__markUnPrivateRequest, _ngwm__markUnPrivateResponse *ngwm__markUnPrivateResponse)
{	struct __ngw__markUnPrivateRequest soap_tmp___ngw__markUnPrivateRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "markUnPrivateRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__markUnPrivateRequest.ngwm__markUnPrivateRequest = ngwm__markUnPrivateRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__markUnPrivateRequest(soap, &soap_tmp___ngw__markUnPrivateRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__markUnPrivateRequest(soap, &soap_tmp___ngw__markUnPrivateRequest, "-ngw:markUnPrivateRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__markUnPrivateRequest(soap, &soap_tmp___ngw__markUnPrivateRequest, "-ngw:markUnPrivateRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__markUnPrivateResponse)
		return soap_closesock(soap);
	ngwm__markUnPrivateResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__markUnPrivateResponse->soap_get(soap, "ngwm:markUnPrivateResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__markUnReadRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__markUnReadRequest *ngwm__markUnReadRequest, _ngwm__markUnReadResponse *ngwm__markUnReadResponse)
{	struct __ngw__markUnReadRequest soap_tmp___ngw__markUnReadRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "markUnReadRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__markUnReadRequest.ngwm__markUnReadRequest = ngwm__markUnReadRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__markUnReadRequest(soap, &soap_tmp___ngw__markUnReadRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__markUnReadRequest(soap, &soap_tmp___ngw__markUnReadRequest, "-ngw:markUnReadRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__markUnReadRequest(soap, &soap_tmp___ngw__markUnReadRequest, "-ngw:markUnReadRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__markUnReadResponse)
		return soap_closesock(soap);
	ngwm__markUnReadResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__markUnReadResponse->soap_get(soap, "ngwm:markUnReadResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__modifyItemRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__modifyItemRequest *ngwm__modifyItemRequest, _ngwm__modifyItemResponse *ngwm__modifyItemResponse)
{	struct __ngw__modifyItemRequest soap_tmp___ngw__modifyItemRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "modifyItemRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__modifyItemRequest.ngwm__modifyItemRequest = ngwm__modifyItemRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__modifyItemRequest(soap, &soap_tmp___ngw__modifyItemRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__modifyItemRequest(soap, &soap_tmp___ngw__modifyItemRequest, "-ngw:modifyItemRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__modifyItemRequest(soap, &soap_tmp___ngw__modifyItemRequest, "-ngw:modifyItemRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__modifyItemResponse)
		return soap_closesock(soap);
	ngwm__modifyItemResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__modifyItemResponse->soap_get(soap, "ngwm:modifyItemResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__modifyJunkEntryRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__modifyJunkEntryRequest *ngwm__modifyJunkEntryRequest, _ngwm__modifyJunkEntryResponse *ngwm__modifyJunkEntryResponse)
{	struct __ngw__modifyJunkEntryRequest soap_tmp___ngw__modifyJunkEntryRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "modifyJunkEntryRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__modifyJunkEntryRequest.ngwm__modifyJunkEntryRequest = ngwm__modifyJunkEntryRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__modifyJunkEntryRequest(soap, &soap_tmp___ngw__modifyJunkEntryRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__modifyJunkEntryRequest(soap, &soap_tmp___ngw__modifyJunkEntryRequest, "-ngw:modifyJunkEntryRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__modifyJunkEntryRequest(soap, &soap_tmp___ngw__modifyJunkEntryRequest, "-ngw:modifyJunkEntryRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__modifyJunkEntryResponse)
		return soap_closesock(soap);
	ngwm__modifyJunkEntryResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__modifyJunkEntryResponse->soap_get(soap, "ngwm:modifyJunkEntryResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__modifyJunkMailSettingsRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__modifyJunkMailSettingsRequest *ngwm__modifyJunkMailSettingsRequest, _ngwm__modifyJunkMailSettingsResponse *ngwm__modifyJunkMailSettingsResponse)
{	struct __ngw__modifyJunkMailSettingsRequest soap_tmp___ngw__modifyJunkMailSettingsRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "modifyJunkMailSettingsRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__modifyJunkMailSettingsRequest.ngwm__modifyJunkMailSettingsRequest = ngwm__modifyJunkMailSettingsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__modifyJunkMailSettingsRequest(soap, &soap_tmp___ngw__modifyJunkMailSettingsRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__modifyJunkMailSettingsRequest(soap, &soap_tmp___ngw__modifyJunkMailSettingsRequest, "-ngw:modifyJunkMailSettingsRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__modifyJunkMailSettingsRequest(soap, &soap_tmp___ngw__modifyJunkMailSettingsRequest, "-ngw:modifyJunkMailSettingsRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__modifyJunkMailSettingsResponse)
		return soap_closesock(soap);
	ngwm__modifyJunkMailSettingsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__modifyJunkMailSettingsResponse->soap_get(soap, "ngwm:modifyJunkMailSettingsResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__modifyPasswordRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__modifyPasswordRequest *ngwm__modifyPasswordRequest, _ngwm__modifyPasswordResponse *ngwm__modifyPasswordResponse)
{	struct __ngw__modifyPasswordRequest soap_tmp___ngw__modifyPasswordRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "modifyPasswordRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__modifyPasswordRequest.ngwm__modifyPasswordRequest = ngwm__modifyPasswordRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__modifyPasswordRequest(soap, &soap_tmp___ngw__modifyPasswordRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__modifyPasswordRequest(soap, &soap_tmp___ngw__modifyPasswordRequest, "-ngw:modifyPasswordRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__modifyPasswordRequest(soap, &soap_tmp___ngw__modifyPasswordRequest, "-ngw:modifyPasswordRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__modifyPasswordResponse)
		return soap_closesock(soap);
	ngwm__modifyPasswordResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__modifyPasswordResponse->soap_get(soap, "ngwm:modifyPasswordResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__modifyProxyAccessRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__modifyProxyAccessRequest *ngwm__modifyProxyAccessRequest, _ngwm__modifyProxyAccessResponse *ngwm__modifyProxyAccessResponse)
{	struct __ngw__modifyProxyAccessRequest soap_tmp___ngw__modifyProxyAccessRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "modifyProxyAccessRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__modifyProxyAccessRequest.ngwm__modifyProxyAccessRequest = ngwm__modifyProxyAccessRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__modifyProxyAccessRequest(soap, &soap_tmp___ngw__modifyProxyAccessRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__modifyProxyAccessRequest(soap, &soap_tmp___ngw__modifyProxyAccessRequest, "-ngw:modifyProxyAccessRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__modifyProxyAccessRequest(soap, &soap_tmp___ngw__modifyProxyAccessRequest, "-ngw:modifyProxyAccessRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__modifyProxyAccessResponse)
		return soap_closesock(soap);
	ngwm__modifyProxyAccessResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__modifyProxyAccessResponse->soap_get(soap, "ngwm:modifyProxyAccessResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__modifySettingsRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__modifySettingsRequest *ngwm__modifySettingsRequest, _ngwm__modifySettingsResponse *ngwm__modifySettingsResponse)
{	struct __ngw__modifySettingsRequest soap_tmp___ngw__modifySettingsRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "modifySettingsRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__modifySettingsRequest.ngwm__modifySettingsRequest = ngwm__modifySettingsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__modifySettingsRequest(soap, &soap_tmp___ngw__modifySettingsRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__modifySettingsRequest(soap, &soap_tmp___ngw__modifySettingsRequest, "-ngw:modifySettingsRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__modifySettingsRequest(soap, &soap_tmp___ngw__modifySettingsRequest, "-ngw:modifySettingsRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__modifySettingsResponse)
		return soap_closesock(soap);
	ngwm__modifySettingsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__modifySettingsResponse->soap_get(soap, "ngwm:modifySettingsResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__modifySignaturesRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__modifySignaturesRequest *ngwm__modifySignaturesRequest, _ngwm__modifySignaturesResponse *ngwm__modifySignaturesResponse)
{	struct __ngw__modifySignaturesRequest soap_tmp___ngw__modifySignaturesRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "modifySignaturesRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__modifySignaturesRequest.ngwm__modifySignaturesRequest = ngwm__modifySignaturesRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__modifySignaturesRequest(soap, &soap_tmp___ngw__modifySignaturesRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__modifySignaturesRequest(soap, &soap_tmp___ngw__modifySignaturesRequest, "-ngw:modifySignaturesRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__modifySignaturesRequest(soap, &soap_tmp___ngw__modifySignaturesRequest, "-ngw:modifySignaturesRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__modifySignaturesResponse)
		return soap_closesock(soap);
	ngwm__modifySignaturesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__modifySignaturesResponse->soap_get(soap, "ngwm:modifySignaturesResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__moveItemRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__moveItemRequest *ngwm__moveItemRequest, _ngwm__moveItemResponse *ngwm__moveItemResponse)
{	struct __ngw__moveItemRequest soap_tmp___ngw__moveItemRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "moveItemRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__moveItemRequest.ngwm__moveItemRequest = ngwm__moveItemRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__moveItemRequest(soap, &soap_tmp___ngw__moveItemRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__moveItemRequest(soap, &soap_tmp___ngw__moveItemRequest, "-ngw:moveItemRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__moveItemRequest(soap, &soap_tmp___ngw__moveItemRequest, "-ngw:moveItemRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__moveItemResponse)
		return soap_closesock(soap);
	ngwm__moveItemResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__moveItemResponse->soap_get(soap, "ngwm:moveItemResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__positionCursorRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__positionCursorRequest *ngwm__positionCursorRequest, _ngwm__positionCursorResponse *ngwm__positionCursorResponse)
{	struct __ngw__positionCursorRequest soap_tmp___ngw__positionCursorRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "positionCursorRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__positionCursorRequest.ngwm__positionCursorRequest = ngwm__positionCursorRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__positionCursorRequest(soap, &soap_tmp___ngw__positionCursorRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__positionCursorRequest(soap, &soap_tmp___ngw__positionCursorRequest, "-ngw:positionCursorRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__positionCursorRequest(soap, &soap_tmp___ngw__positionCursorRequest, "-ngw:positionCursorRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__positionCursorResponse)
		return soap_closesock(soap);
	ngwm__positionCursorResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__positionCursorResponse->soap_get(soap, "ngwm:positionCursorResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__purgeDeletedItemsRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__purgeDeletedItemsRequest *ngwm__purgeDeletedItemsRequest, _ngwm__purgeDeletedItemsResponse *ngwm__purgeDeletedItemsResponse)
{	struct __ngw__purgeDeletedItemsRequest soap_tmp___ngw__purgeDeletedItemsRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "purgeDeletedItemsRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__purgeDeletedItemsRequest.ngwm__purgeDeletedItemsRequest = ngwm__purgeDeletedItemsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__purgeDeletedItemsRequest(soap, &soap_tmp___ngw__purgeDeletedItemsRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__purgeDeletedItemsRequest(soap, &soap_tmp___ngw__purgeDeletedItemsRequest, "-ngw:purgeDeletedItemsRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__purgeDeletedItemsRequest(soap, &soap_tmp___ngw__purgeDeletedItemsRequest, "-ngw:purgeDeletedItemsRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__purgeDeletedItemsResponse)
		return soap_closesock(soap);
	ngwm__purgeDeletedItemsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__purgeDeletedItemsResponse->soap_get(soap, "ngwm:purgeDeletedItemsResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__purgeRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__purgeRequest *ngwm__purgeRequest, _ngwm__purgeResponse *ngwm__purgeResponse)
{	struct __ngw__purgeRequest soap_tmp___ngw__purgeRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "purgeRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__purgeRequest.ngwm__purgeRequest = ngwm__purgeRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__purgeRequest(soap, &soap_tmp___ngw__purgeRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__purgeRequest(soap, &soap_tmp___ngw__purgeRequest, "-ngw:purgeRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__purgeRequest(soap, &soap_tmp___ngw__purgeRequest, "-ngw:purgeRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__purgeResponse)
		return soap_closesock(soap);
	ngwm__purgeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__purgeResponse->soap_get(soap, "ngwm:purgeResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__readCursorRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__readCursorRequest *ngwm__readCursorRequest, _ngwm__readCursorResponse *ngwm__readCursorResponse)
{	struct __ngw__readCursorRequest soap_tmp___ngw__readCursorRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "readCursorRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__readCursorRequest.ngwm__readCursorRequest = ngwm__readCursorRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__readCursorRequest(soap, &soap_tmp___ngw__readCursorRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__readCursorRequest(soap, &soap_tmp___ngw__readCursorRequest, "-ngw:readCursorRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__readCursorRequest(soap, &soap_tmp___ngw__readCursorRequest, "-ngw:readCursorRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__readCursorResponse)
		return soap_closesock(soap);
	ngwm__readCursorResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__readCursorResponse->soap_get(soap, "ngwm:readCursorResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__removeCustomDefinitionRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__removeCustomDefinitionRequest *ngwm__removeCustomDefinitionRequest, _ngwm__removeCustomDefinitionResponse *ngwm__removeCustomDefinitionResponse)
{	struct __ngw__removeCustomDefinitionRequest soap_tmp___ngw__removeCustomDefinitionRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "removeCustomDefinitionRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__removeCustomDefinitionRequest.ngwm__removeCustomDefinitionRequest = ngwm__removeCustomDefinitionRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__removeCustomDefinitionRequest(soap, &soap_tmp___ngw__removeCustomDefinitionRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__removeCustomDefinitionRequest(soap, &soap_tmp___ngw__removeCustomDefinitionRequest, "-ngw:removeCustomDefinitionRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__removeCustomDefinitionRequest(soap, &soap_tmp___ngw__removeCustomDefinitionRequest, "-ngw:removeCustomDefinitionRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__removeCustomDefinitionResponse)
		return soap_closesock(soap);
	ngwm__removeCustomDefinitionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__removeCustomDefinitionResponse->soap_get(soap, "ngwm:removeCustomDefinitionResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__removeItemRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__removeItemRequest *ngwm__removeItemRequest, _ngwm__removeItemResponse *ngwm__removeItemResponse)
{	struct __ngw__removeItemRequest soap_tmp___ngw__removeItemRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "removeItemRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__removeItemRequest.ngwm__removeItemRequest = ngwm__removeItemRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__removeItemRequest(soap, &soap_tmp___ngw__removeItemRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__removeItemRequest(soap, &soap_tmp___ngw__removeItemRequest, "-ngw:removeItemRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__removeItemRequest(soap, &soap_tmp___ngw__removeItemRequest, "-ngw:removeItemRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__removeItemResponse)
		return soap_closesock(soap);
	ngwm__removeItemResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__removeItemResponse->soap_get(soap, "ngwm:removeItemResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__removeItemsRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__removeItemsRequest *ngwm__removeItemsRequest, _ngwm__removeItemsResponse *ngwm__removeItemsResponse)
{	struct __ngw__removeItemsRequest soap_tmp___ngw__removeItemsRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "removeItemsRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__removeItemsRequest.ngwm__removeItemsRequest = ngwm__removeItemsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__removeItemsRequest(soap, &soap_tmp___ngw__removeItemsRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__removeItemsRequest(soap, &soap_tmp___ngw__removeItemsRequest, "-ngw:removeItemsRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__removeItemsRequest(soap, &soap_tmp___ngw__removeItemsRequest, "-ngw:removeItemsRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__removeItemsResponse)
		return soap_closesock(soap);
	ngwm__removeItemsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__removeItemsResponse->soap_get(soap, "ngwm:removeItemsResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__removeJunkEntryRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__removeJunkEntryRequest *ngwm__removeJunkEntryRequest, _ngwm__removeJunkEntryResponse *ngwm__removeJunkEntryResponse)
{	struct __ngw__removeJunkEntryRequest soap_tmp___ngw__removeJunkEntryRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "removeJunkEntryRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__removeJunkEntryRequest.ngwm__removeJunkEntryRequest = ngwm__removeJunkEntryRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__removeJunkEntryRequest(soap, &soap_tmp___ngw__removeJunkEntryRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__removeJunkEntryRequest(soap, &soap_tmp___ngw__removeJunkEntryRequest, "-ngw:removeJunkEntryRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__removeJunkEntryRequest(soap, &soap_tmp___ngw__removeJunkEntryRequest, "-ngw:removeJunkEntryRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__removeJunkEntryResponse)
		return soap_closesock(soap);
	ngwm__removeJunkEntryResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__removeJunkEntryResponse->soap_get(soap, "ngwm:removeJunkEntryResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__removeMembersRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__removeMembersRequest *ngwm__removeMembersRequest, _ngwm__removeMembersResponse *ngwm__removeMembersResponse)
{	struct __ngw__removeMembersRequest soap_tmp___ngw__removeMembersRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "removeMembersRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__removeMembersRequest.ngwm__removeMembersRequest = ngwm__removeMembersRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__removeMembersRequest(soap, &soap_tmp___ngw__removeMembersRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__removeMembersRequest(soap, &soap_tmp___ngw__removeMembersRequest, "-ngw:removeMembersRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__removeMembersRequest(soap, &soap_tmp___ngw__removeMembersRequest, "-ngw:removeMembersRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__removeMembersResponse)
		return soap_closesock(soap);
	ngwm__removeMembersResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__removeMembersResponse->soap_get(soap, "ngwm:removeMembersResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__removeProxyAccessRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__removeProxyAccessRequest *ngwm__removeProxyAccessRequest, _ngwm__removeProxyAccessResponse *ngwm__removeProxyAccessResponse)
{	struct __ngw__removeProxyAccessRequest soap_tmp___ngw__removeProxyAccessRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "removeProxyAccessRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__removeProxyAccessRequest.ngwm__removeProxyAccessRequest = ngwm__removeProxyAccessRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__removeProxyAccessRequest(soap, &soap_tmp___ngw__removeProxyAccessRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__removeProxyAccessRequest(soap, &soap_tmp___ngw__removeProxyAccessRequest, "-ngw:removeProxyAccessRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__removeProxyAccessRequest(soap, &soap_tmp___ngw__removeProxyAccessRequest, "-ngw:removeProxyAccessRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__removeProxyAccessResponse)
		return soap_closesock(soap);
	ngwm__removeProxyAccessResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__removeProxyAccessResponse->soap_get(soap, "ngwm:removeProxyAccessResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__removeProxyUserRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__removeProxyUserRequest *ngwm__removeProxyUserRequest, _ngwm__removeProxyUserResponse *ngwm__removeProxyUserResponse)
{	struct __ngw__removeProxyUserRequest soap_tmp___ngw__removeProxyUserRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "removeProxyUserRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__removeProxyUserRequest.ngwm__removeProxyUserRequest = ngwm__removeProxyUserRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__removeProxyUserRequest(soap, &soap_tmp___ngw__removeProxyUserRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__removeProxyUserRequest(soap, &soap_tmp___ngw__removeProxyUserRequest, "-ngw:removeProxyUserRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__removeProxyUserRequest(soap, &soap_tmp___ngw__removeProxyUserRequest, "-ngw:removeProxyUserRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__removeProxyUserResponse)
		return soap_closesock(soap);
	ngwm__removeProxyUserResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__removeProxyUserResponse->soap_get(soap, "ngwm:removeProxyUserResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__removeSignatureRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__removeSignatureRequest *ngwm__removeSignatureRequest, _ngwm__removeSignatureResponse *ngwm__removeSignatureResponse)
{	struct __ngw__removeSignatureRequest soap_tmp___ngw__removeSignatureRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "removeSignatureRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__removeSignatureRequest.ngwm__removeSignatureRequest = ngwm__removeSignatureRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__removeSignatureRequest(soap, &soap_tmp___ngw__removeSignatureRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__removeSignatureRequest(soap, &soap_tmp___ngw__removeSignatureRequest, "-ngw:removeSignatureRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__removeSignatureRequest(soap, &soap_tmp___ngw__removeSignatureRequest, "-ngw:removeSignatureRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__removeSignatureResponse)
		return soap_closesock(soap);
	ngwm__removeSignatureResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__removeSignatureResponse->soap_get(soap, "ngwm:removeSignatureResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__replyRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__replyRequest *ngwm__replyRequest, _ngwm__replyResponse *ngwm__replyResponse)
{	struct __ngw__replyRequest soap_tmp___ngw__replyRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "replyRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__replyRequest.ngwm__replyRequest = ngwm__replyRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__replyRequest(soap, &soap_tmp___ngw__replyRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__replyRequest(soap, &soap_tmp___ngw__replyRequest, "-ngw:replyRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__replyRequest(soap, &soap_tmp___ngw__replyRequest, "-ngw:replyRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__replyResponse)
		return soap_closesock(soap);
	ngwm__replyResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__replyResponse->soap_get(soap, "ngwm:replyResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__retractRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__retractRequest *ngwm__retractRequest, _ngwm__retractResponse *ngwm__retractResponse)
{	struct __ngw__retractRequest soap_tmp___ngw__retractRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "retractRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__retractRequest.ngwm__retractRequest = ngwm__retractRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__retractRequest(soap, &soap_tmp___ngw__retractRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__retractRequest(soap, &soap_tmp___ngw__retractRequest, "-ngw:retractRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__retractRequest(soap, &soap_tmp___ngw__retractRequest, "-ngw:retractRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__retractResponse)
		return soap_closesock(soap);
	ngwm__retractResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__retractResponse->soap_get(soap, "ngwm:retractResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__sendItemRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__sendItemRequest *ngwm__sendItemRequest, _ngwm__sendItemResponse *ngwm__sendItemResponse)
{	struct __ngw__sendItemRequest soap_tmp___ngw__sendItemRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "sendItemRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__sendItemRequest.ngwm__sendItemRequest = ngwm__sendItemRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__sendItemRequest(soap, &soap_tmp___ngw__sendItemRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__sendItemRequest(soap, &soap_tmp___ngw__sendItemRequest, "-ngw:sendItemRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__sendItemRequest(soap, &soap_tmp___ngw__sendItemRequest, "-ngw:sendItemRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__sendItemResponse)
		return soap_closesock(soap);
	ngwm__sendItemResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__sendItemResponse->soap_get(soap, "ngwm:sendItemResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__setTimestampRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__setTimestampRequest *ngwm__setTimestampRequest, _ngwm__setTimestampResponse *ngwm__setTimestampResponse)
{	struct __ngw__setTimestampRequest soap_tmp___ngw__setTimestampRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "setTimestampRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__setTimestampRequest.ngwm__setTimestampRequest = ngwm__setTimestampRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__setTimestampRequest(soap, &soap_tmp___ngw__setTimestampRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__setTimestampRequest(soap, &soap_tmp___ngw__setTimestampRequest, "-ngw:setTimestampRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__setTimestampRequest(soap, &soap_tmp___ngw__setTimestampRequest, "-ngw:setTimestampRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__setTimestampResponse)
		return soap_closesock(soap);
	ngwm__setTimestampResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__setTimestampResponse->soap_get(soap, "ngwm:setTimestampResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__startFreeBusySessionRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__startFreeBusySessionRequest *ngwm__startFreeBusySessionRequest, _ngwm__startFreeBusySessionResponse *ngwm__startFreeBusySessionResponse)
{	struct __ngw__startFreeBusySessionRequest soap_tmp___ngw__startFreeBusySessionRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "startFreeBusySessionRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__startFreeBusySessionRequest.ngwm__startFreeBusySessionRequest = ngwm__startFreeBusySessionRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__startFreeBusySessionRequest(soap, &soap_tmp___ngw__startFreeBusySessionRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__startFreeBusySessionRequest(soap, &soap_tmp___ngw__startFreeBusySessionRequest, "-ngw:startFreeBusySessionRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__startFreeBusySessionRequest(soap, &soap_tmp___ngw__startFreeBusySessionRequest, "-ngw:startFreeBusySessionRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__startFreeBusySessionResponse)
		return soap_closesock(soap);
	ngwm__startFreeBusySessionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__startFreeBusySessionResponse->soap_get(soap, "ngwm:startFreeBusySessionResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__unacceptRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__unacceptRequest *ngwm__unacceptRequest, _ngwm__unacceptResponse *ngwm__unacceptResponse)
{	struct __ngw__unacceptRequest soap_tmp___ngw__unacceptRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "unacceptRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__unacceptRequest.ngwm__unacceptRequest = ngwm__unacceptRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__unacceptRequest(soap, &soap_tmp___ngw__unacceptRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__unacceptRequest(soap, &soap_tmp___ngw__unacceptRequest, "-ngw:unacceptRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__unacceptRequest(soap, &soap_tmp___ngw__unacceptRequest, "-ngw:unacceptRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__unacceptResponse)
		return soap_closesock(soap);
	ngwm__unacceptResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__unacceptResponse->soap_get(soap, "ngwm:unacceptResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__uncompleteRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__uncompleteRequest *ngwm__uncompleteRequest, _ngwm__uncompleteResponse *ngwm__uncompleteResponse)
{	struct __ngw__uncompleteRequest soap_tmp___ngw__uncompleteRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "uncompleteRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__uncompleteRequest.ngwm__uncompleteRequest = ngwm__uncompleteRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__uncompleteRequest(soap, &soap_tmp___ngw__uncompleteRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__uncompleteRequest(soap, &soap_tmp___ngw__uncompleteRequest, "-ngw:uncompleteRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__uncompleteRequest(soap, &soap_tmp___ngw__uncompleteRequest, "-ngw:uncompleteRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__uncompleteResponse)
		return soap_closesock(soap);
	ngwm__uncompleteResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__uncompleteResponse->soap_get(soap, "ngwm:uncompleteResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__updateVersionStatusRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwm__updateVersionStatusRequest *ngwm__updateVersionStatusRequest, _ngwm__updateVersionStatusResponse *ngwm__updateVersionStatusResponse)
{	struct __ngw__updateVersionStatusRequest soap_tmp___ngw__updateVersionStatusRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "updateVersionStatusRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__updateVersionStatusRequest.ngwm__updateVersionStatusRequest = ngwm__updateVersionStatusRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__updateVersionStatusRequest(soap, &soap_tmp___ngw__updateVersionStatusRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__updateVersionStatusRequest(soap, &soap_tmp___ngw__updateVersionStatusRequest, "-ngw:updateVersionStatusRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__updateVersionStatusRequest(soap, &soap_tmp___ngw__updateVersionStatusRequest, "-ngw:updateVersionStatusRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwm__updateVersionStatusResponse)
		return soap_closesock(soap);
	ngwm__updateVersionStatusResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwm__updateVersionStatusResponse->soap_get(soap, "ngwm:updateVersionStatusResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__cleanEventConfigurationRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwe__cleanEventConfigurationRequest *ngwe__cleanEventConfigurationRequest, _ngwe__cleanEventConfigurationResponse *ngwe__cleanEventConfigurationResponse)
{	struct __ngw__cleanEventConfigurationRequest soap_tmp___ngw__cleanEventConfigurationRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "cleanEventConfigurationRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__cleanEventConfigurationRequest.ngwe__cleanEventConfigurationRequest = ngwe__cleanEventConfigurationRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__cleanEventConfigurationRequest(soap, &soap_tmp___ngw__cleanEventConfigurationRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__cleanEventConfigurationRequest(soap, &soap_tmp___ngw__cleanEventConfigurationRequest, "-ngw:cleanEventConfigurationRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__cleanEventConfigurationRequest(soap, &soap_tmp___ngw__cleanEventConfigurationRequest, "-ngw:cleanEventConfigurationRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwe__cleanEventConfigurationResponse)
		return soap_closesock(soap);
	ngwe__cleanEventConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwe__cleanEventConfigurationResponse->soap_get(soap, "ngwe:cleanEventConfigurationResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__configureEventsRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwe__configureEventsRequest *ngwe__configureEventsRequest, _ngwe__configureEventsResponse *ngwe__configureEventsResponse)
{	struct __ngw__configureEventsRequest soap_tmp___ngw__configureEventsRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "configureEventsRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__configureEventsRequest.ngwe__configureEventsRequest = ngwe__configureEventsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__configureEventsRequest(soap, &soap_tmp___ngw__configureEventsRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__configureEventsRequest(soap, &soap_tmp___ngw__configureEventsRequest, "-ngw:configureEventsRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__configureEventsRequest(soap, &soap_tmp___ngw__configureEventsRequest, "-ngw:configureEventsRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwe__configureEventsResponse)
		return soap_closesock(soap);
	ngwe__configureEventsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwe__configureEventsResponse->soap_get(soap, "ngwe:configureEventsResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__getEventConfigurationRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwe__getEventConfigurationRequest *ngwe__getEventConfigurationRequest, _ngwe__getEventConfigurationResponse *ngwe__getEventConfigurationResponse)
{	struct __ngw__getEventConfigurationRequest soap_tmp___ngw__getEventConfigurationRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "getEventConfigurationRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__getEventConfigurationRequest.ngwe__getEventConfigurationRequest = ngwe__getEventConfigurationRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__getEventConfigurationRequest(soap, &soap_tmp___ngw__getEventConfigurationRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__getEventConfigurationRequest(soap, &soap_tmp___ngw__getEventConfigurationRequest, "-ngw:getEventConfigurationRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__getEventConfigurationRequest(soap, &soap_tmp___ngw__getEventConfigurationRequest, "-ngw:getEventConfigurationRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwe__getEventConfigurationResponse)
		return soap_closesock(soap);
	ngwe__getEventConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwe__getEventConfigurationResponse->soap_get(soap, "ngwe:getEventConfigurationResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__getEventsRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwe__getEventsRequest *ngwe__getEventsRequest, _ngwe__getEventsResponse *ngwe__getEventsResponse)
{	struct __ngw__getEventsRequest soap_tmp___ngw__getEventsRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "getEventsRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__getEventsRequest.ngwe__getEventsRequest = ngwe__getEventsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__getEventsRequest(soap, &soap_tmp___ngw__getEventsRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__getEventsRequest(soap, &soap_tmp___ngw__getEventsRequest, "-ngw:getEventsRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__getEventsRequest(soap, &soap_tmp___ngw__getEventsRequest, "-ngw:getEventsRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwe__getEventsResponse)
		return soap_closesock(soap);
	ngwe__getEventsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwe__getEventsResponse->soap_get(soap, "ngwe:getEventsResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__removeEventConfigurationRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwe__removeEventConfigurationRequest *ngwe__removeEventConfigurationRequest, _ngwe__removeEventConfigurationResponse *ngwe__removeEventConfigurationResponse)
{	struct __ngw__removeEventConfigurationRequest soap_tmp___ngw__removeEventConfigurationRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "removeEventConfigurationRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__removeEventConfigurationRequest.ngwe__removeEventConfigurationRequest = ngwe__removeEventConfigurationRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__removeEventConfigurationRequest(soap, &soap_tmp___ngw__removeEventConfigurationRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__removeEventConfigurationRequest(soap, &soap_tmp___ngw__removeEventConfigurationRequest, "-ngw:removeEventConfigurationRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__removeEventConfigurationRequest(soap, &soap_tmp___ngw__removeEventConfigurationRequest, "-ngw:removeEventConfigurationRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwe__removeEventConfigurationResponse)
		return soap_closesock(soap);
	ngwe__removeEventConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwe__removeEventConfigurationResponse->soap_get(soap, "ngwe:removeEventConfigurationResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ngw__removeEventsRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ngwe__removeEventsRequest *ngwe__removeEventsRequest, _ngwe__removeEventsResponse *ngwe__removeEventsResponse)
{	struct __ngw__removeEventsRequest soap_tmp___ngw__removeEventsRequest;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080";
	if (!soap_action)
		soap_action = "removeEventsRequest";
	soap->encodingStyle = NULL;
	soap_tmp___ngw__removeEventsRequest.ngwe__removeEventsRequest = ngwe__removeEventsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ngw__removeEventsRequest(soap, &soap_tmp___ngw__removeEventsRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ngw__removeEventsRequest(soap, &soap_tmp___ngw__removeEventsRequest, "-ngw:removeEventsRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ngw__removeEventsRequest(soap, &soap_tmp___ngw__removeEventsRequest, "-ngw:removeEventsRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ngwe__removeEventsResponse)
		return soap_closesock(soap);
	ngwe__removeEventsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ngwe__removeEventsResponse->soap_get(soap, "ngwe:removeEventsResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

/* End of soapClient.cpp */
