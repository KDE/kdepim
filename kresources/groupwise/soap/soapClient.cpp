/* soapClient.cpp
   Generated by gSOAP 2.6.2 from ./groupwise.h
   Copyright (C) 2001-2004 Genivia, Inc. All Rights Reserved.
   This software is released under the gSOAP public license and GPL.
   See README.txt for further details.
*/
#include "soapH.h"

SOAP_BEGIN_NAMESPACE(soap)

SOAP_SOURCE_STAMP("@(#) soapClient.cpp ver 2.6.2 2004-08-19 12:15:15 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns10__modifyItemRequest(struct soap *soap, const char *URL, const char *action, _ns1__modifyItemRequest *ns1__modifyItemRequest, _ns1__modifyItemResponse *ns1__modifyItemResponse)
{
	struct __ns10__modifyItemRequest soap_tmp___ns10__modifyItemRequest;
	soap->encodingStyle = NULL;
	if (!action)
		action = "modifyItemRequest";
	soap_tmp___ns10__modifyItemRequest.ns1__modifyItemRequest=ns1__modifyItemRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns10__modifyItemRequest(soap, &soap_tmp___ns10__modifyItemRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ns10__modifyItemRequest(soap, &soap_tmp___ns10__modifyItemRequest, "-ns10:modifyItemRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, URL, action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__modifyItemRequest(soap, &soap_tmp___ns10__modifyItemRequest, "-ns10:modifyItemRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
#ifndef WITH_LEANER
	 || soap_putattachments(soap)
#endif
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (ns1__modifyItemResponse)
		ns1__modifyItemResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (ns1__modifyItemResponse)
		ns1__modifyItemResponse->soap_get(soap, "ns1:modifyItemResponse", "");
	else
		soap_get__ns1__modifyItemResponse(soap, ns1__modifyItemResponse, "ns1:modifyItemResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
#ifndef WITH_LEANER
	 || soap_getattachments(soap)
#endif
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns11__purgeItemRequest(struct soap *soap, const char *URL, const char *action, _ns1__purgeItemRequest *ns1__purgeItemRequest, _ns1__purgeItemResponse *ns1__purgeItemResponse)
{
	struct __ns11__purgeItemRequest soap_tmp___ns11__purgeItemRequest;
	soap->encodingStyle = NULL;
	if (!action)
		action = "purgeItemRequest";
	soap_tmp___ns11__purgeItemRequest.ns1__purgeItemRequest=ns1__purgeItemRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns11__purgeItemRequest(soap, &soap_tmp___ns11__purgeItemRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ns11__purgeItemRequest(soap, &soap_tmp___ns11__purgeItemRequest, "-ns11:purgeItemRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, URL, action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__purgeItemRequest(soap, &soap_tmp___ns11__purgeItemRequest, "-ns11:purgeItemRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
#ifndef WITH_LEANER
	 || soap_putattachments(soap)
#endif
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (ns1__purgeItemResponse)
		ns1__purgeItemResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (ns1__purgeItemResponse)
		ns1__purgeItemResponse->soap_get(soap, "ns1:purgeItemResponse", "");
	else
		soap_get__ns1__purgeItemResponse(soap, ns1__purgeItemResponse, "ns1:purgeItemResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
#ifndef WITH_LEANER
	 || soap_getattachments(soap)
#endif
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns12__removeItemRequest(struct soap *soap, const char *URL, const char *action, _ns1__removeItemRequest *ns1__removeItemRequest, _ns1__removeItemResponse *ns1__removeItemResponse)
{
	struct __ns12__removeItemRequest soap_tmp___ns12__removeItemRequest;
	soap->encodingStyle = NULL;
	if (!action)
		action = "removeItemRequest";
	soap_tmp___ns12__removeItemRequest.ns1__removeItemRequest=ns1__removeItemRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns12__removeItemRequest(soap, &soap_tmp___ns12__removeItemRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ns12__removeItemRequest(soap, &soap_tmp___ns12__removeItemRequest, "-ns12:removeItemRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, URL, action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns12__removeItemRequest(soap, &soap_tmp___ns12__removeItemRequest, "-ns12:removeItemRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
#ifndef WITH_LEANER
	 || soap_putattachments(soap)
#endif
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (ns1__removeItemResponse)
		ns1__removeItemResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (ns1__removeItemResponse)
		ns1__removeItemResponse->soap_get(soap, "ns1:removeItemResponse", "");
	else
		soap_get__ns1__removeItemResponse(soap, ns1__removeItemResponse, "ns1:removeItemResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
#ifndef WITH_LEANER
	 || soap_getattachments(soap)
#endif
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__loginRequest(struct soap *soap, const char *URL, const char *action, _ns1__loginRequest *ns1__loginRequest, _ns1__loginResponse *ns1__loginResponse)
{
	struct __ns2__loginRequest soap_tmp___ns2__loginRequest;
	soap->encodingStyle = NULL;
	if (!action)
		action = "loginRequest";
	soap_tmp___ns2__loginRequest.ns1__loginRequest=ns1__loginRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__loginRequest(soap, &soap_tmp___ns2__loginRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ns2__loginRequest(soap, &soap_tmp___ns2__loginRequest, "-ns2:loginRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, URL, action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__loginRequest(soap, &soap_tmp___ns2__loginRequest, "-ns2:loginRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
#ifndef WITH_LEANER
	 || soap_putattachments(soap)
#endif
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (ns1__loginResponse)
		ns1__loginResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (ns1__loginResponse)
		ns1__loginResponse->soap_get(soap, "ns1:loginResponse", "");
	else
		soap_get__ns1__loginResponse(soap, ns1__loginResponse, "ns1:loginResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
#ifndef WITH_LEANER
	 || soap_getattachments(soap)
#endif
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__getCategoryListRequest(struct soap *soap, const char *URL, const char *action, std::string ns1__getCategoryListRequest, _ns1__getCategoryListResponse *ns1__getCategoryListResponse)
{
	struct __ns3__getCategoryListRequest soap_tmp___ns3__getCategoryListRequest;
	soap->encodingStyle = NULL;
	if (!action)
		action = "getCategoryListRequest";
	soap_tmp___ns3__getCategoryListRequest.ns1__getCategoryListRequest=ns1__getCategoryListRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__getCategoryListRequest(soap, &soap_tmp___ns3__getCategoryListRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ns3__getCategoryListRequest(soap, &soap_tmp___ns3__getCategoryListRequest, "-ns3:getCategoryListRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, URL, action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__getCategoryListRequest(soap, &soap_tmp___ns3__getCategoryListRequest, "-ns3:getCategoryListRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
#ifndef WITH_LEANER
	 || soap_putattachments(soap)
#endif
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (ns1__getCategoryListResponse)
		ns1__getCategoryListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (ns1__getCategoryListResponse)
		ns1__getCategoryListResponse->soap_get(soap, "ns1:getCategoryListResponse", "");
	else
		soap_get__ns1__getCategoryListResponse(soap, ns1__getCategoryListResponse, "ns1:getCategoryListResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
#ifndef WITH_LEANER
	 || soap_getattachments(soap)
#endif
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__getAddressBookListRequest(struct soap *soap, const char *URL, const char *action, std::string ns1__getAddressBookListRequest, _ns1__getAddressBookListResponse *ns1__getAddressBookListResponse)
{
	struct __ns4__getAddressBookListRequest soap_tmp___ns4__getAddressBookListRequest;
	soap->encodingStyle = NULL;
	if (!action)
		action = "getAddressBookListRequest";
	soap_tmp___ns4__getAddressBookListRequest.ns1__getAddressBookListRequest=ns1__getAddressBookListRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getAddressBookListRequest(soap, &soap_tmp___ns4__getAddressBookListRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ns4__getAddressBookListRequest(soap, &soap_tmp___ns4__getAddressBookListRequest, "-ns4:getAddressBookListRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, URL, action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getAddressBookListRequest(soap, &soap_tmp___ns4__getAddressBookListRequest, "-ns4:getAddressBookListRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
#ifndef WITH_LEANER
	 || soap_putattachments(soap)
#endif
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (ns1__getAddressBookListResponse)
		ns1__getAddressBookListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (ns1__getAddressBookListResponse)
		ns1__getAddressBookListResponse->soap_get(soap, "ns1:getAddressBookListResponse", "");
	else
		soap_get__ns1__getAddressBookListResponse(soap, ns1__getAddressBookListResponse, "ns1:getAddressBookListResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
#ifndef WITH_LEANER
	 || soap_getattachments(soap)
#endif
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns5__getItemRequest(struct soap *soap, const char *URL, const char *action, _ns1__getItemRequest *ns1__getItemRequest, _ns1__getItemResponse *ns1__getItemResponse)
{
	struct __ns5__getItemRequest soap_tmp___ns5__getItemRequest;
	soap->encodingStyle = NULL;
	if (!action)
		action = "getItemRequest";
	soap_tmp___ns5__getItemRequest.ns1__getItemRequest=ns1__getItemRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns5__getItemRequest(soap, &soap_tmp___ns5__getItemRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ns5__getItemRequest(soap, &soap_tmp___ns5__getItemRequest, "-ns5:getItemRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, URL, action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns5__getItemRequest(soap, &soap_tmp___ns5__getItemRequest, "-ns5:getItemRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
#ifndef WITH_LEANER
	 || soap_putattachments(soap)
#endif
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (ns1__getItemResponse)
		ns1__getItemResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (ns1__getItemResponse)
		ns1__getItemResponse->soap_get(soap, "ns1:getItemResponse", "");
	else
		soap_get__ns1__getItemResponse(soap, ns1__getItemResponse, "ns1:getItemResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
#ifndef WITH_LEANER
	 || soap_getattachments(soap)
#endif
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns6__getItemsRequest(struct soap *soap, const char *URL, const char *action, _ns1__getItemsRequest *ns1__getItemsRequest, _ns1__getItemsResponse *ns1__getItemsResponse)
{
	struct __ns6__getItemsRequest soap_tmp___ns6__getItemsRequest;
	soap->encodingStyle = NULL;
	if (!action)
		action = "getItemsRequest";
	soap_tmp___ns6__getItemsRequest.ns1__getItemsRequest=ns1__getItemsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns6__getItemsRequest(soap, &soap_tmp___ns6__getItemsRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ns6__getItemsRequest(soap, &soap_tmp___ns6__getItemsRequest, "-ns6:getItemsRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, URL, action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns6__getItemsRequest(soap, &soap_tmp___ns6__getItemsRequest, "-ns6:getItemsRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
#ifndef WITH_LEANER
	 || soap_putattachments(soap)
#endif
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (ns1__getItemsResponse)
		ns1__getItemsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (ns1__getItemsResponse)
		ns1__getItemsResponse->soap_get(soap, "ns1:getItemsResponse", "");
	else
		soap_get__ns1__getItemsResponse(soap, ns1__getItemsResponse, "ns1:getItemsResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
#ifndef WITH_LEANER
	 || soap_getattachments(soap)
#endif
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__getFolderListRequest(struct soap *soap, const char *URL, const char *action, _ns1__getFolderListRequest *ns1__getFolderListRequest, _ns1__getFolderListResponse *ns1__getFolderListResponse)
{
	struct __ns7__getFolderListRequest soap_tmp___ns7__getFolderListRequest;
	soap->encodingStyle = NULL;
	if (!action)
		action = "getFolderListRequest";
	soap_tmp___ns7__getFolderListRequest.ns1__getFolderListRequest=ns1__getFolderListRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns7__getFolderListRequest(soap, &soap_tmp___ns7__getFolderListRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ns7__getFolderListRequest(soap, &soap_tmp___ns7__getFolderListRequest, "-ns7:getFolderListRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, URL, action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__getFolderListRequest(soap, &soap_tmp___ns7__getFolderListRequest, "-ns7:getFolderListRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
#ifndef WITH_LEANER
	 || soap_putattachments(soap)
#endif
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (ns1__getFolderListResponse)
		ns1__getFolderListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (ns1__getFolderListResponse)
		ns1__getFolderListResponse->soap_get(soap, "ns1:getFolderListResponse", "");
	else
		soap_get__ns1__getFolderListResponse(soap, ns1__getFolderListResponse, "ns1:getFolderListResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
#ifndef WITH_LEANER
	 || soap_getattachments(soap)
#endif
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__getDeltaRequest(struct soap *soap, const char *URL, const char *action, _ns1__getDeltaRequest *ns1__getDeltaRequest, _ns1__getDeltaResponse *ns1__getDeltaResponse)
{
	struct __ns8__getDeltaRequest soap_tmp___ns8__getDeltaRequest;
	soap->encodingStyle = NULL;
	if (!action)
		action = "getDeltaRequest";
	soap_tmp___ns8__getDeltaRequest.ns1__getDeltaRequest=ns1__getDeltaRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns8__getDeltaRequest(soap, &soap_tmp___ns8__getDeltaRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ns8__getDeltaRequest(soap, &soap_tmp___ns8__getDeltaRequest, "-ns8:getDeltaRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, URL, action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__getDeltaRequest(soap, &soap_tmp___ns8__getDeltaRequest, "-ns8:getDeltaRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
#ifndef WITH_LEANER
	 || soap_putattachments(soap)
#endif
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (ns1__getDeltaResponse)
		ns1__getDeltaResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (ns1__getDeltaResponse)
		ns1__getDeltaResponse->soap_get(soap, "ns1:getDeltaResponse", "");
	else
		soap_get__ns1__getDeltaResponse(soap, ns1__getDeltaResponse, "ns1:getDeltaResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
#ifndef WITH_LEANER
	 || soap_getattachments(soap)
#endif
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns9__createItemRequest(struct soap *soap, const char *URL, const char *action, _ns1__createItemRequest *ns1__createItemRequest, _ns1__createItemResponse *ns1__createItemResponse)
{
	struct __ns9__createItemRequest soap_tmp___ns9__createItemRequest;
	soap->encodingStyle = NULL;
	if (!action)
		action = "createItemRequest";
	soap_tmp___ns9__createItemRequest.ns1__createItemRequest=ns1__createItemRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns9__createItemRequest(soap, &soap_tmp___ns9__createItemRequest);
	soap_begin_count(soap);
	if (soap->mode & SOAP_IO_LENGTH)
	{	soap_envelope_begin_out(soap);
		soap_putheader(soap);
		soap_body_begin_out(soap);
		soap_put___ns9__createItemRequest(soap, &soap_tmp___ns9__createItemRequest, "-ns9:createItemRequest", "");
		soap_body_end_out(soap);
		soap_envelope_end_out(soap);
	}
	if (soap_connect(soap, URL, action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__createItemRequest(soap, &soap_tmp___ns9__createItemRequest, "-ns9:createItemRequest", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
#ifndef WITH_LEANER
	 || soap_putattachments(soap)
#endif
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (ns1__createItemResponse)
		ns1__createItemResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (ns1__createItemResponse)
		ns1__createItemResponse->soap_get(soap, "ns1:createItemResponse", "");
	else
		soap_get__ns1__createItemResponse(soap, ns1__createItemResponse, "ns1:createItemResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
#ifndef WITH_LEANER
	 || soap_getattachments(soap)
#endif
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_END_NAMESPACE(soap)

/* end of soapClient.cpp */
