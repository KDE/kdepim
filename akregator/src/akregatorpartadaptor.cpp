/*
 * This file was generated by dbusidl2cpp version 0.5
 * when processing input file org.kde.akregator.part.xml
 *
 * dbusidl2cpp is Copyright (C) 2006 Trolltech AS. All rights reserved.
 *
 * This is an auto-generated file.
 */

#include "akregatorpartadaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class PartAdaptor
 */

PartAdaptor::PartAdaptor(QObject *parent)
   : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

PartAdaptor::~PartAdaptor()
{
    // destructor
}

void PartAdaptor::addFeed()
{
    // handle method call org.kde.akregator.part.addFeed
    QMetaObject::invokeMethod(parent(), "addFeed");

    // Alternative:
    //static_cast<YourObjectType *>(parent())->addFeed();
}

void PartAdaptor::addFeedsToGroup(const QStringList &lst, const QString &feedname)
{
    // handle method call org.kde.akregator.part.addFeedsToGroup
    QMetaObject::invokeMethod(parent(), "addFeedsToGroup", Q_ARG(QStringList, lst), Q_ARG(QString, feedname));

    // Alternative:
    //static_cast<YourObjectType *>(parent())->addFeedsToGroup(lst, feedname);
}

void PartAdaptor::exportFile(const QString &url)
{
    // handle method call org.kde.akregator.part.exportFile
    QMetaObject::invokeMethod(parent(), "exportFile", Q_ARG(QString, url));

    // Alternative:
    //static_cast<YourObjectType *>(parent())->exportFile(url);
}

void PartAdaptor::fetchAllFeeds()
{
    // handle method call org.kde.akregator.part.fetchAllFeeds
    QMetaObject::invokeMethod(parent(), "fetchAllFeeds");

    // Alternative:
    //static_cast<YourObjectType *>(parent())->fetchAllFeeds();
}

void PartAdaptor::fetchFeedUrl(const QString &url)
{
    // handle method call org.kde.akregator.part.fetchFeedUrl
    QMetaObject::invokeMethod(parent(), "fetchFeedUrl", Q_ARG(QString, url));

    // Alternative:
    //static_cast<YourObjectType *>(parent())->fetchFeedUrl(url);
}

void PartAdaptor::openStandardFeedList()
{
    // handle method call org.kde.akregator.part.openStandardFeedList
    QMetaObject::invokeMethod(parent(), "openStandardFeedList");

    // Alternative:
    //static_cast<YourObjectType *>(parent())->openStandardFeedList();
}

void PartAdaptor::saveSettings()
{
    // handle method call org.kde.akregator.part.saveSettings
    QMetaObject::invokeMethod(parent(), "saveSettings");

    // Alternative:
    //static_cast<YourObjectType *>(parent())->saveSettings();
}


#include "akregatorpartadaptor.moc"
