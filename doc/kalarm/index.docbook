<?xml version="1.0" ?>
<!DOCTYPE book PUBLIC "-//KDE//DTD DocBook XML V4.1-Based Variant V1.0//EN" "dtd/kdex.dtd" [
  <!ENTITY kappname "&kalarm;">
  <!ENTITY package "kdepim">
  <!ENTITY % addindex "IGNORE">
  <!ENTITY % English "INCLUDE"><!-- change language only here -->
]>

<book lang="&language;">

<bookinfo>
<title>The &kalarm; Handbook</title>

<authorgroup>
<author>
<firstname>David</firstname>
<othername></othername>
<surname>Jarvie</surname>
<affiliation>
<address><email>software@astrojar.org.uk</email></address>
</affiliation>
</author>
</authorgroup>

<!-- TRANS:ROLES_OF_TRANSLATORS -->

<copyright>
<year>2001</year>
<holder>David Jarvie</holder>
</copyright>

<legalnotice>&FDLNotice;</legalnotice>

<date>2001-10-17</date>
<releaseinfo>0.02.00</releaseinfo>

<abstract>
<para>&kalarm; is an alarm/reminder message scheduler for &kde;.</para>
</abstract>


<keywordset>
<keyword>KDE</keyword>
<keyword>kdepim</keyword>
<keyword>kalarm</keyword>
<keyword>alarm</keyword>
<keyword>reminder</keyword>
</keywordset>

</bookinfo>

<chapter id="introduction">
<title>Introduction</title>

<para>&kalarm; is an alarm/reminder message scheduler. It lets you set
up personal alarm/reminder messages which pop up on the screen at the
time you specify.</para>

<para>In its default graphical mode, &kalarm; displays a list of
pending alarms, showing their times and message texts.  You can create
new alarms, or alternatively you can select existing alarms in order
to modify or delete them.</para>

<para>When setting up or modifying an alarm, you can choose the colour
of the alarm message, whether it should repeat, whether to sound an
audible beep, and whether the alarm should be cancelled if it can't be
displayed at its scheduled time.</para>

<para>Alarms may also be scheduled on the command line, or via &DCOP;
calls from programs.</para>

<para>When an alarm message is due, it is displayed on each &kde;
desktop to ensure that you don't miss it should you happen to be
switching desktops just at that moment. The message window shows the
time for which the alarm was scheduled, which could be useful to know
if it was displayed late or if you were away from the computer when it
popped up. An example of an alarm message:</para>

<screenshot>
<screeninfo>Screenshot of the &kalarm; message window</screeninfo>
<mediaobject>
<imageobject>
<imagedata fileref="alarmmessage.png" format="PNG"/>
</imageobject>
<textobject>
<phrase>Alarm message</phrase>
</textobject>
</mediaobject>
</screenshot>
</chapter>

<chapter id="using-kalarm">
<title>Using &kalarm;</title>

<sect1 id="graphmode">
<title>Graphical mode</title>

<para>When it is run with no command line parameters, &kalarm; starts
in graphical mode. It displays the current list of outstanding
alarms.</para>

<screenshot>
<screeninfo>Screenshot of the &kalarm; main window</screeninfo>
<mediaobject>
<imageobject>
<imagedata fileref="mainwindow.png" format="PNG"/>
</imageobject>
<textobject>
<phrase>Main window</phrase>
</textobject>
</mediaobject>
</screenshot>

<para>For a repeated alarm, the list shows its next scheduled time for
display and the number of times which it is due to repeat after
that.</para>

<para>The alarms may be ordered by date/time, repeat count, colour or
message text by clicking on the title bar for the appropriate
column. To reverse the sort order, click the column title bar
again.</para>

<para>When &kalarm; starts in graphical mode, it checks whether the
alarm daemon is running.  If it is not already running, &kalarm;
starts it.</para>

<sect2>
<title>Adding a new alarm</title>

<para>To add a new alarm message, select <menuchoice>
<guimenu>Actions</guimenu><guimenuitem>New</guimenuitem></menuchoice>.
This displays the alarm message edit window:</para>

<screenshot>
<screeninfo>Screenshot of the Alarm edit window</screeninfo>
<mediaobject>
<imageobject>
<imagedata fileref="editwindow.png" format="PNG"/>
</imageobject>
<textobject>
<phrase>Alarm edit window</phrase>
</textobject>
</mediaobject>
</screenshot>

<para>Enter the message text in the <guilabel>Message</guilabel> edit
box. The message text may include newlines.</para>

<para>Enter the date and time when the message is to be
displayed.</para>

<para>If you want the alarm to be repeated, enter the number of
repetitions (after the initial display) and the interval (in hours and
minutes, in the range 1 minute to 99 hours) between
repetitions.</para>

<para>The <guilabel>Cancel if late</guilabel> checkbox determines what
happens if the alarm can't be displayed at its scheduled time. Check
this box to cancel the alarm if it can't be displayed within 1 minute
after the right time. Leave the box unchecked to display the alarm at
the first opportunity starting at the scheduled time.</para>

<note><para>An alarm can only be displayed while you are logged in,
and while both X and the alarm daemon are running.</para></note>

<para>Check the <guilabel>Beep</guilabel> checkbox if you want an
audible alarm to sound when the alarm message is displayed.</para>

<para>Select the background colour for the alarm message
window. </para>

<para>Press the <guibutton>Set Alarm</guibutton> button when all
details are correct, to add the alarm to the scheduled list.</para>

</sect2>

<sect2>
<title>Modifying an existing alarm</title>

<para>To modify an existing alarm message, do one of the
following:</para>

<procedure>
<step>
<para>Select it by clicking on its entry in the alarm list. Then choose
<menuchoice><guimenu>Actions</guimenu><guimenuitem>Modify</guimenuitem></menuchoice>from
the menu.</para>
</step>
<step>
<para><mousebutton>Right</mousebutton> click on its entry in the alarm
list and choose <menuchoice><guimenuitem>Modify</guimenuitem></menuchoice>
from the context menu.</para>
</step>
</procedure>

<para>This displays the alarm message edit window as described
above.</para>

</sect2>

<sect2>
<title>Deleting an existing alarm</title>

<para>To delete an existing alarm message, do one of the
following:</para>

<procedure>
<step>
<para>Select it by clicking on its entry in the alarm list. Then
choose
<menuchoice><guimenu>Actions</guimenu>
<guimenuitem>Delete</guimenuitem></menuchoice>from the menu.</para>
</step>
<step>
<para><mousebutton>Right</mousebutton> click on its entry in the alarm
list and choose
<menuchoice><guimenuitem>Delete</guimenuitem></menuchoice> from the
context menu.</para>

</step>
</procedure>

</sect2>

<sect2 id="gui-reset">
<title>Resetting the alarm daemon</title>

<para>To reset the alarm daemon, select
<menuchoice><guimenu>Actions</guimenu><guimenuitem>Reset
Daemon</guimenuitem></menuchoice>.</para>

<para>See the <link linkend="daemon-reset">Alarm daemon</link> section
for a discussion about resetting the alarm daemon.</para>

</sect2>

<sect2>
<title>Configuring default options</title>

<para>To set default options for &kalarm;, select
<menuchoice><guimenu>Settings</guimenu><guimenuitem>Configure &kalarm;
...</guimenuitem></menuchoice>. This displays the configuration
dialog:</para>

<screenshot>
<screeninfo>Screenshot of the &kalarm; configuration window</screeninfo>
<mediaobject>
<imageobject>
<imagedata fileref="configwindow.png" format="PNG"/>
</imageobject>
<textobject>
<phrase>Configuration window</phrase>
</textobject>
</mediaobject>
</screenshot>

<para>Here, you can set the default font and background colour to use
for alarm message display.</para>

</sect2>

<sect2>
<title>Quitting the program</title>

<para>To exit from &kalarm;, select<menuchoice><guimenu>File</guimenu>
<guimenuitem>Quit</guimenuitem></menuchoice>.</para>

<tip>
<para>This has no effect on the alarm daemon, which if already active
will continue to monitor scheduled alarms and request their display
when they become due.</para>
</tip>

</sect2>
</sect1>

<sect1 id="cmdline-operation">
<title>Command line operation</title>

<para>When command line parameters are supplied, &kalarm; does not
display the list of scheduled alarms as described in <link
linkend="graphmode">Graphical mode</link> above.  Command line options
specific to &kalarm; may be used to perform the following
operations:</para>

<itemizedlist>
<listitem><para>schedule a new alarm message</para>
</listitem>
<listitem><para>control the alarm daemon</para>
</listitem>
</itemizedlist>

<para>Additional command line options are provided primarily to enable
other programs to interface to &kalarm;. They are described in the
chapter <link linkend="cmdline-interface">Developer's Guide to
&kalarm;</link>.</para>

<para>The command line must only contain options applicable to one
&kalarm; operation. If you want to perform multiple operations, you
must invoke &kalarm; multiple times with a single set of options each
time.</para>

<sect2 id="cmdline-schedule">
<title>Schedule a new alarm message</title>

<para>The following options are used to schedule an alarm message for
display by &kalarm;:</para>

<informaltable>
<tgroup cols="2">
<thead>
<row>
  <entry>Option</entry>
  <entry>Description</entry>
</row>
</thead>
<tbody>
<row>
  <entry><option>-b</option>, <option>--beep</option></entry>
  <entry>Make an audible beep when the message is displayed.</entry>
</row>
<row>
  <entry><option>-c</option>, <option>--color</option>, <option>--colour
  <replaceable>colour</replaceable></option></entry>
  <entry>Set the message background colour to the specified QT colour name or hex code 0xRRGGBB.</entry>
</row>
<row>
  <entry><option>-i</option>, <option>--interval
  <replaceable>minutes</replaceable></option></entry>
  <entry>Set the interval between repetitions of the alarm to the specified number of minutes. Mandatory if <option>--repeat</option> is specified.</entry>
</row>
<row>
  <entry><option>-l</option>, <option>--late-cancel</option></entry>
  <entry>Cancel the message if it cannot be displayed at the correct time.</entry>
</row>
<row>
  <entry><option>-r</option>, <option>--repeat
  <replaceable>minutes</replaceable></option></entry>
  <entry>The number of times the alarm should be repeated, after its initial display. Mandatory if <option>--interval</option> is specified.</entry>
</row>
<row>
  <entry><option>-t</option>, <option>--time
  <replaceable>time</replaceable></option></entry>
  <entry>Display message at 'time' [[[yyyy-]mm-]dd-]hh:mm (default is immediately).</entry>
</row>
<row>
  <entry><replaceable>message</replaceable></entry>
  <entry>Message text to display.</entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para>A message text must be specified; except as noted, all the
options are optional.</para>

<para>Two alternative examples which display a multi-line message with
a red background at 10 p.m. on the 27th of this month are:</para>

<informalexample><screen><prompt>%</prompt> <userinput><command>kalarm</command> <option>-c <replaceable>red</replaceable></option> <option>-t <replaceable>27-22:00</replaceable></option> <option><replaceable>"Remember to\nSTOP"</replaceable></option></userinput>
<prompt>%</prompt> <userinput><command>kalarm</command> <option>-c <replaceable>0xFF0000</replaceable></option> <option>-t <replaceable>27-22:00</replaceable></option> <option><replaceable>"Remember to\nSTOP"</replaceable></option></userinput></screen>
</informalexample>

</sect2>

<sect2>
<title>Control the alarm daemon</title>

<para>The following options are used to reset or halt the alarm
daemon.</para>

<para>See the <link linkend="daemon-reset">Alarm daemon</link> section
for a discussion about resetting and stopping the alarm daemon.</para>

<informaltable>
<tgroup cols="2">
<thead>
<row>
  <entry>Option</entry>
  <entry>Description</entry>
</row>
</thead>
<tbody>
<row>
  <entry><option>--reset</option></entry>
  <entry>Reset the alarm daemon.</entry>
</row>
<row>
  <entry><option>--stop</option></entry>
  <entry>Stop the alarm daemon.</entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para>The following command will reset the alarm daemon.</para>

<informalexample>
<screen><prompt>%</prompt> <userinput><command>kalarm</command> <option>--reset</option></userinput></screen>
</informalexample>

<para>The following command will halt the alarm daemon.</para>

<informalexample>
<screen><prompt>%</prompt> <userinput><command>kalarm</command> <option>--stop</option></userinput></screen>
</informalexample>

</sect2>

<sect2>
<title>Help options</title>

<para>The following help options are common to all &kde;
programs:</para>

<informaltable>
<tgroup cols="2">
<thead>
<row>
  <entry>Option</entry>
  <entry>Description</entry>
</row>
</thead>
<tbody>
<row>
  <entry><option>--help</option></entry>
  <entry>Shows a brief options help text.</entry>
</row>
<row>
  <entry><option>--help-qt</option></entry>
  <entry>Shows numerous generic &Qt;-specific options.</entry>
</row>
<row>
  <entry><option>--help-kde</option></entry>
  <entry>Shows numerous generic &kde;-specific options.</entry>
</row>
<row>
  <entry><option>--help-all</option></entry>
  <entry>Shows all options.</entry>
</row>
<row>
  <entry><option>--author</option></entry>
  <entry>Shows the names and email addresses of &kalarm; authors.</entry>
</row>
<row>
  <entry><option>-v</option>, <option>--version</option></entry>
  <entry>Shows the running versions of the &Qt; library , &kde; and
  &kalarm;.</entry>
</row>
<row>
  <entry><option>--license</option></entry>
  <entry>Show licence information.</entry>
</row>
</tbody>
</tgroup>
</informaltable>

</sect2>
</sect1>

<sect1 id="daemon">
<title>Alarm daemon</title>

<para>The alarm daemon, &kalarmd;, monitors &kalarm;'s calendar file
for alarms becoming due. When it determines that an alarm is due, it
tells &kalarm; to display it, or to cancel it if it is late and late
display was not selected for that alarm message.</para>

<para>The alarm daemon may also be used by other applications.</para>

<para>The alarm daemon runs as a &kde; panel application. It may be
controlled via its menu which is accessed by right-clicking on its
icon in the &kde; panel.</para>

<para>You can activate &kalarm; by <mousebutton>left</mousebutton>
clicking on the alarm daemon icon in the &kde; panel, provided either
that &kalarm; is the only application which uses the daemon, or that
&kalarm; is selected for activation in the alarm daemon's menu.</para>

<sect2>
<title>Alarm daemon menu</title>

<variablelist>
<varlistentry>
<term><menuchoice><guimenuitem>Alarms Enabled</guimenuitem></menuchoice></term>
<listitem><para><action>Toggles alarms enabled / disabled.</action></para>
<para>When alarms are enabled, the calendar files marked in the menu
as selected will be monitored for alarms becoming due. When alarms are
not enabled, no alarm monitoring is performed, and &kalarm; will not
display any alarms.</para>
</listitem>
</varlistentry>

<varlistentry>
<term><menuchoice><guimenuitem>Auto start at login</guimenuitem></menuchoice></term>
<listitem><para><action>Toggles on / off automatically running the
alarm daemon at login.</action></para>
<para>When auto start is enabled, the alarm daemon will automatically
run whenever you log on. This is the normal mode which ensures that
alarms are monitored. If you want to disable alarm monitoring after
you next log off, deselect this option; the alarm daemon will no
longer be started at login.</para>
<note><para>Whenever the alarm daemon is started up, whether by
&kalarm; or any other application which uses the daemon or by other
means, auto start is re-enabled. The facility to disable auto start is
provided primarily to allow you to disable the alarm daemon if you do
not expect to use &kalarm; or any other client applications for a
while.</para></note>
</listitem>
</varlistentry>

<varlistentry>
<term><menuchoice><guimenuitem>Click starts application</guimenuitem></menuchoice></term>
<listitem><para><action>Selects the application to be activated</action> when
the panel icon is <mousebutton>left</mousebutton>
clicked.</para>

<note><para>There is one menu entry for each application registered
with the alarm daemon. If &kalarm; is the only application registered
with the alarm daemon, this menu option will not appear, and &kalarm;
will be activated whenever the icon is left-clicked.</para></note>
</listitem>
</varlistentry>

<varlistentry>
<term><menuchoice><guimenuitem><replaceable>calendar file</replaceable></guimenuitem></menuchoice></term>
<listitem><para><action>Toggles the calendar file enabled /
disabled.</action></para>
<para>When the given calendar file is enabled, it will be monitored
for alarms becoming due. When it is not enabled, no alarm monitoring
is performed for that calendar file, and &kalarm; will not display any
alarms from it.</para> 
<note><para>There is one menu entry for each calendar file being
monitored by the alarm daemon. &kalarm; always uses a single calendar
file. Any additional calendar files shown in the menu will belong to
other applications which are registered with the alarm
daemon.</para></note>
</listitem>
</varlistentry>

<varlistentry>
<term><menuchoice><guimenuitem>Quit</guimenuitem></menuchoice></term>
<listitem><para><action>Quits the alarm daemon.</action></para>
<para>No further alarm monitoring will be performed, and &kalarm; will
not display any alarms, until the alarm daemon is restarted.</para> 
<warning><para>Quitting will also affect the functioning of any
other applications which use the alarm daemon.
</para></warning>
</listitem>
</varlistentry>
</variablelist>
</sect2>

<sect2>
<title>Starting, resetting and stopping the alarm daemon</title>

<para>The alarm daemon is normally started at KDE session login (unless you use the context menu to
disable auto start), and runs continuously until logout.
If for any reason it is not running, alarm monitoring will not occur and &kalarm; will not display any
alarms.
</para>

<sect3>
<title>Starting the alarm daemon</title>
<para>To start the alarm daemon, you can either run &kalarm; in its default graphical mode (i.e. without any
command line parameters), reset the daemon as described <link linkend="daemon-reset">below</link>,
or you can run the alarm daemon directly from the command line:
</para>
<screen width="40">
<prompt>%</prompt> <command>kalarmd</command>
</screen>

</sect3>

<sect3 id="daemon-reset">
<title>Resetting the alarm daemon</title>

<para>It is also possible to reset the alarm daemon without stopping
it. Resetting causes the alarm daemon to re-read the list of scheduled
messages from the calendar file and re-initialise its &kalarm;-related
data.</para>

<para>Why might you want to reset the alarm daemon? It isn't a very
likely occurrence, but if for any reason &kalarm; was not able to run
when the alarm daemon told it to output a message, that message will
never be output until the alarm daemon is either reset or
restarted. Resetting is preferable to stopping the alarm daemon and
restarting it, since resetting the daemon will not affect any other
applications which use the alarm daemon.</para>

<tip><para>Resetting starts the alarm daemon if it is not currently
running.</para></tip>

<para>To reset the alarm daemon, either use the menu command
<menuchoice><guimenu>Actions</guimenu><guimenuitem>Reset
Daemon</guimenuitem></menuchoice>, or type the following
command:</para>

<screen width="40"><prompt>%</prompt><userinput><command>kalarm</command> <option>--reset</option></userinput></screen>

</sect3>

<sect3>
<title>Stopping the alarm daemon</title>

<para>Stopping the alarm daemon will prevent any further monitoring of
scheduled alarm messages until the daemon is restarted.</para>

<warning><para>Stopping it will affect the functioning of any other
applications which also use the alarm daemon. Consider resetting the
daemon instead.</para></warning>

<para>To stop the alarm daemon, either use the alarm daemon's
<guimenuitem>Quit</guimenuitem> menu option, or type the following
command:</para>

<screen width="40"><prompt>%</prompt> <userinput><command>kalarm</command> <option>&#45;&#45;stop</option></userinput></screen>
</sect3>

</sect2>
</sect1>
</chapter>

<chapter id="developers">
<title>Developer's Guide to &kalarm;</title>

<para>&kalarm; provides an interface to allow other applications to
request the following functions:</para>

<itemizedlist>
<listitem><para>schedule a new alarm message</para></listitem>
<listitem><para>display or cancel an already scheduled alarm
message</para></listitem>
<listitem><para>cancel an already scheduled alarm message</para></listitem>
<listitem><para>display an already scheduled alarm message</para></listitem>
</itemizedlist>

<para>Each of the above functions is implemented both by a &DCOP; call
and by the command line. &DCOP; calls should be used in preference if
&kalarm; is already running.</para>

<sect1 id="dcop-interface">
<title>&DCOP; interface</title>

<para>&DCOP; calls are provided to enable other programs to request
the following functions:</para>

<variablelist>
<varlistentry>
<term><function>scheduleMessage</function></term>
<listitem>
<para><action>schedule a new alarm message</action></para>
</listitem>
</varlistentry>

<varlistentry>
<term><function>handleEvent</function></term>
<listitem>
<para><action>display or cancel an already scheduled alarm
message</action></para>
</listitem>
</varlistentry>

<varlistentry>
<term><function>cancelMessage</function></term>
<listitem><para><action>cancel an already scheduled alarm
message</action></para></listitem>
</varlistentry>

<varlistentry>
<term><function>displayMessage</function></term>
<listitem><para><action>display an already scheduled alarm
message</action></para></listitem>
</varlistentry>
</variablelist>

<refentry id="cancelMessage">
<refmeta>
<refentrytitle>cancelMessage</refentrytitle>
</refmeta>
<refnamediv>
<refname>cancelMessage</refname>
<refpurpose>cancel an already scheduled alarm message.</refpurpose>
</refnamediv>
<refsynopsisdiv>
<synopsis>
void cancelMessage(const QString&amp; <replaceable>calendarFile</replaceable>, const QString&amp; <replaceable>eventID</replaceable>)
</synopsis>

<refsect2>
<title>Parameters</title>
<variablelist>
<varlistentry>
<term><parameter>calendarFile</parameter></term>
<listitem>
<para>Specifies the &URL; of the calendar file containing the event to
be cancelled.</para>
</listitem>
</varlistentry>

<varlistentry>
<term><replaceable>eventID</replaceable></term>
<listitem>
<para>Specifies the unique ID of the event to be cancelled, as stored
in <replaceable>calendarFile</replaceable>.</para>
</listitem>
</varlistentry>
</variablelist>
</refsect2>
</refsynopsisdiv>

<refsect1>
<title>Description</title>

<para><function>cancelMessage()</function> is a &DCOP; call to cancel
the specified alarm message. &kalarm; deletes the alarm message from
the calendar file without displaying it.</para>

<note><para>The <replaceable>calendarFile</replaceable> parameter is
only used for integrity checking: if the &URL; does not specify
&kalarm;'s current default calendar file, the request will be
ignored.</para></note>

</refsect1>
</refentry>

<refentry id="displayMessage">
<refmeta>
<refentrytitle>displayMessage</refentrytitle>
</refmeta>
<refnamediv>
<refname>displayMessage</refname>
<refpurpose>display an already scheduled alarm message.</refpurpose>
</refnamediv>
<refsynopsisdiv>
<synopsis>
void displayMessage(const QString&amp; <replaceable>calendarFile</replaceable>, const QString&amp; <replaceable>eventID</replaceable>)
</synopsis>

<refsect2>
<title>Parameters</title>
<variablelist>
<varlistentry>
<term><parameter>calendarFile</parameter></term>
<listitem>
<para>Specifies the &URL; of the calendar file containing the event to
be displayed.</para>
</listitem>
</varlistentry>

<varlistentry>
<term><replaceable>eventID</replaceable></term>
<listitem>
<para>Specifies the unique ID of the event to be displayed, as stored
in <replaceable>calendarFile</replaceable>.</para>
</listitem>
</varlistentry>
</variablelist>
</refsect2>
</refsynopsisdiv>

<refsect1>
<title>Description</title>

<para><function>displayMessage()</function> is a &DCOP; call to
display the specified alarm message. &kalarm; retrieves the alarm
message from the calendar file and then displays it.</para>

<para>If no repetitions of the alarm are still scheduled, &kalarm;
then deletes the alarm message from the calendar file.</para>

<note><para>The <replaceable>calendarFile</replaceable> parameter is
only used for integrity checking: if the &URL; does not specify
&kalarm;'s current default calendar file, the request will be
ignored.</para></note>

</refsect1>
</refentry>

<refentry id="handleEvent">
<refmeta>
<refentrytitle>handleEvent</refentrytitle>
</refmeta>
<refnamediv>
<refname>handleEvent</refname>
<refpurpose>display or cancel an already scheduled alarm message.</refpurpose>
</refnamediv>
<refsynopsisdiv>
<synopsis>
void handleEvent(const QString&amp; <replaceable>calendarFile</replaceable>, const QString&amp; <replaceable>eventID</replaceable>)
</synopsis>

<refsect2>
<title>Parameters</title>
<variablelist>
<varlistentry>
<term><parameter>calendarFile</parameter></term>
<listitem>
<para>Specifies the &URL; of the calendar file containing the event to
be displayed or cancelled.</para>
</listitem>
</varlistentry>

<varlistentry>
<term><replaceable>eventID</replaceable></term>
<listitem>
<para>Specifies the unique ID of the event to be displayed or
cancelled, as stored in
<replaceable>calendarFile</replaceable>.</para>
</listitem>
</varlistentry>
</variablelist>
</refsect2>
</refsynopsisdiv>

<refsect1>
<title>Description</title>

<para><function>handleEvent()</function> is a &DCOP; call to display
or cancel the specified alarm message. &kalarm; retrieves the alarm
message from the calendar file and then determines what action to
take. If the late-cancel flag is set and the alarm is late, &ie; the
scheduled time of display was more than a minute ago, &kalarm; does
not display the message; otherwise, &kalarm; displays the alarm
message. If no repetitions of the alarm are still scheduled, &kalarm;
then deletes the alarm message from the calendar file.</para>

<note><para>The <replaceable>calendarFile</replaceable> parameter is
only used for integrity checking: if the &URL; does not specify
&kalarm;'s current default calendar file, the request will be
ignored.</para></note>

</refsect1>
</refentry>

<refentry id="scheduleMessage">
<refmeta>
<refentrytitle>scheduleMessage</refentrytitle>
</refmeta>
<refnamediv>
<refname>scheduleMessage</refname>
<refpurpose>schedule a new alarm message.</refpurpose>
</refnamediv>
<refsynopsisdiv>
<synopsis>
bool scheduleMessage(const QString&amp; <replaceable>message</replaceable>, const QDateTime* <replaceable>dateTime</replaceable>, const QColor&amp; <replaceable>bg</replaceable>, int <replaceable>flags</replaceable>)
</synopsis>
<synopsis>
bool scheduleMessage(const QString&amp; <replaceable>message</replaceable>, const QDateTime* <replaceable>dateTime</replaceable>, const QColor&amp; <replaceable>bg</replaceable>, int <replaceable>flags</replaceable>, int <replaceable>repeat_count</replaceable>, int <replaceable>interval</replaceable>)
</synopsis>

<refsect2>
<title>Parameters</title>
<variablelist>
<varlistentry>
<term><parameter>message</parameter></term>
<listitem>
<para>Specifies the text of the message to be scheduled.</para>
</listitem>
</varlistentry>
<varlistentry>
<term><parameter>dateTime</parameter></term>
<listitem>
<para>Specifies the scheduled date and time at which the message
should be displayed.</para>
</listitem>
</varlistentry>

<varlistentry>
<term><parameter>bg</parameter></term>
<listitem>
<para>Specifies the background colour for displaying the message.</para>
</listitem>
</varlistentry>
<varlistentry>
<term><parameter>flags</parameter></term>
<listitem>
<para>Specifies the logical OR of the desired alarm message flags. The
flag bits are those defined in <filename>msgevent.h</filename></para>
</listitem>
</varlistentry>

<varlistentry>
<term><parameter>repeatCount</parameter></term>
<listitem>
<para>Specifies the number of times that the alarm message should be
repeated, after its initial display.</para>
</listitem>
</varlistentry>

<varlistentry>
<term><parameter>interval</parameter></term>
<listitem>
<para>Specifies the interval in minutes between repetitions of the
alarm message.</para>
</listitem>
</varlistentry>
</variablelist>
</refsect2>
</refsynopsisdiv>

<refsect1>
<title>Description</title>
<para><function>scheduleMessage()</function> is a &DCOP; call to
schedule the specified alarm message for display at the specified date
and time. It has two forms: one for a non-repeating alarm, and another
for a repeating alarm.</para>

<para>If the scheduled time (including any repetitions) has already
passed, &kalarm; immediately displays the message or, if the
LATE_CANCEL flag bit is set, ignores the request. If the scheduled
time is in the future, &kalarm; adds the alarm message to the calendar
file for later display.</para>

<para>Use a code sequence similar to the following to set up the
parameter data for the &DCOP; call to
<function>scheduleMessage()</function> for a non-repeating
alarm:</para>

<screen>QString message;
QDateTime dateTime;
QColor bgColour;
Q_UINT32 flags;
. . .
QByteArray data;
QDataStream arg(data, IO_WriteOnly);
arg &lt;&lt;  message;
arg.writeRawBytes((char*)&amp;dateTime, sizeof(QDateTime));
arg.writeRawBytes((char*)&amp;bgColour, sizeof(QColor));
arg &lt;&lt; flags;</screen>

<para>Use a code sequence similar to the following to set up the
parameter data for the &DCOP; call to
<function>scheduleMessage()</function> for a repeating alarm:</para>

<screen>QString message;
QDateTime dateTime;
QColor bgColour;
Q_UINT32 flags;
Q_INT32 repeatCount, repeatInterval;
. . .
QByteArray data;
QDataStream arg(data, IO_WriteOnly);
arg &lt;&lt; message;
arg.writeRawBytes((char*)&amp;dateTime, sizeof(QDateTime));
arg.writeRawBytes((char*)&amp;bgColour, sizeof(QColor));
arg &lt;&lt; flags &lt;&lt; repeatCount &lt;&lt; repeatInterval;</screen>

</refsect1>
</refentry>
</sect1>

<sect1 id="cmdline-interface">
<title>Command line interface</title>

<para>Command line options are provided to enable other programs (such
as the alarm daemon) to start up &kalarm; if it is not already
running, in order to display or cancel scheduled messages, or schedule
new messages. The reason for using command line options for this
purpose is that if &kalarm; were started without any command line
parameters and then sent &DCOP; requests, it would start in its
default graphical mode, which is clearly undesirable for an
inter-program request.</para>

<note><para>Programs should first check whether &kalarm; is already
running; if it is, they should instead use &DCOP; calls to request these
operations. </para></note>

<para>The command line options for scheduling a new alarm message are
as described in the chapter <link linkend="cmdline-interface">Using
&kalarm;</link>. The options for displaying and cancelling scheduled
messages are as follows:</para>

<note><para>Normal users may also if they wish use these command line
options (assuming that they can supply the necessary parameter
information).  </para></note>

<informaltable>
<tgroup cols="2">
<thead>
<row>
  <entry>Option</entry>
  <entry>Description</entry>
</row>
</thead>
<tbody>
<row>
  <entry><option>--calendarURL</option> <replaceable>url</replaceable></entry>
  <entry>Use the calendar file with the specified &URL;. This option
  is only used for integrity checking: if the &URL; doesn't specify
  &kalarm;'s current default calendar file, the request will be
  ignored.</entry>
</row>
<row>
  <entry><option>--cancelEvent</option> <replaceable>eventID</replaceable></entry>
  <entry>Cancel the event with the specified event ID.</entry>
</row>
<row>
  <entry><option>--displayEvent</option> <replaceable>eventID</replaceable></entry>
  <entry>Display the event with the specified event ID.</entry>
</row>
<row>
  <entry><option>--handleEvent</option> <replaceable>eventID</replaceable></entry>
  <entry>Display or cancel the event with the specified event
  ID. &kalarm; determines which action   to take in the same way as for the <link linkend="handleEvent">handleEvent()</link> &DCOP; call.</entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para><option>--cancelEvent</option>, <option>--displayEvent</option>
and <option>--handleEvent</option> are mutually
exclusive. <option>--calendarURL</option> is optional, but can only be
used with one of the other three options. </para>

<para>Examples are:</para>

<informalexample><screen><prompt>%</prompt> <userinput><command>kalarm</command> <option>--displayEvent <replaceable>&kalarm;-387486299.702</replaceable></option> <option>--calendarURL <replaceable>file:/home/zaphod/hydra.ics</replaceable></option></userinput>
<prompt>%</prompt> <userinput><command>kalarm</command> <option>--cancelEvent <replaceable>&kalarm;-388886299.793</replaceable></option></userinput></screen>
</informalexample>

</sect1>
</chapter>


<chapter id="faq">
<title>Questions and Answers</title>

&reporting.bugs;
&updating.documentation;

<qandaset id="faqlist">
<qandaentry>
<question>
<para>What configuration files does &kalarm; use?</para>
</question>
<answer>
<para>The file <filename>~/.kde2/share/config/kalarmrc</filename> holds your &kalarm; preferences.
</para>
<para>The calendar file which stores your scheduled alarm messages is
<filename>~/.kde2/share/apps/kalarm/calendar.ics</filename>, unless
a different calendar file is specified in the preferences file.
</para>
</answer>
</qandaentry>

<qandaentry>
<question>
<para>What configuration files does the alarm daemon use?</para>
</question>
<answer>
<para>The file <filename>~/.kde2/share/config/kalarmdrc</filename> holds your alarm daemon preferences.
</para>
<para>The file <filename>~/.kde2/share/apps/kalarmd/clients</filename> holds details of client
applications which have previously been registered with the alarm daemon, and their calendar files.
</para>
</answer>
</qandaentry>

<qandaentry>
<question>
<para>What are the application names of &kalarm; and the alarm daemon?</para>
</question>
<answer>
<para>&kalarm;'s application name is <application>kalarm</application>, and the alarm daemon's
application name is <application>kalarmd</application>.
</para>
</answer>
</qandaentry>
</qandaset>
</chapter>


<chapter id="credits">

<title>Credits and Licence</title>

<para>
&kalarm;
</para>
<para>
Program copyright 2001 David Jarvie <email>software@astrojar.org.uk</email>
</para>
<para>
Contributors (original KOrganizer alarm daemon):
<itemizedlist>
<listitem><para>Cornelius Schumacher <email>schumacher@kde.org</email></para>
</listitem>
<listitem><para>Preston Brown <email>pbrown@kde.org</email></para>
</listitem>
</itemizedlist>
</para>

<para>
Documentation copyright 2001 David Jarvie <email>software@astrojar.org.uk</email>
</para>

<!-- TRANS:CREDIT_FOR_TRANSLATORS -->

<para>Thanks go to the author of the KDE1 KAlarm application, Stefan Nikolaus
<email>stefan.nikolaus@stuco.uni-oldenburg.de</email>, who kindly agreed to
allow the name &kalarm; to be used by this KDE2 application.
</para>

&underFDL;               <!-- FDL: do not remove -->

&underGPL;        	 <!-- GPL License -->

</chapter>

<appendix id="installation">
<title>Installation</title>

<sect1 id="getting-kalarm">
<title>How to obtain &kalarm;</title>

&install.intro.documentation;

<para>&kalarm; is available as a separate package from
<ulink url="http://www.astrojar.org.uk/linux">http://www.astrojar.org.uk/linux</ulink>
</para>
</sect1>

<sect1 id="requirements">
<title>Requirements</title>

<para>In order to use &kalarm;, you need &kde; 2.0 or later. &kalarm;
uses the libraries <filename>libkcal</filename>,
<filename>libical</filename> and <filename>libicalss</filename> from
the &kde; package kdepim. Copies of these are included in the standalone
&kalarm; package. </para>

<para>&kalarm; uses about 8 Mb and the alarm daemon uses about 5 Mb of
memory to run, but this may vary depending on your platform and
configuration.</para>

<para>You can find a list of changes in the
<filename>ChangeLog</filename> file, or at <ulink
url="http://www.astrojar.org.uk/linux/kalarm.html">http://www.astrojar.org.uk/linux/kalarm.html</ulink>.</para>
</sect1>

<sect1 id="compilation">
<title>Compilation and installation</title>

<para>If &kalarm; is not installed and if you are the administrator of
your system, your best bet is to use a precompiled binary file.</para>

<itemizedlist>

<listitem><para>If your system understands the RPM binary package
format, you should get a file <filename>kdepim2.i386.rpm</filename> or
<filename>kalarm.i386.rpm</filename> (or similar), depending on
whether you want to install kdepim or just &kalarm;. The command to
install is: <userinput><command>rpm</command> <option>-i</option>
<replaceable>package.i386.rpm</replaceable></userinput>, and the
command to upgrade is: <userinput><command>rpm</command>
<option>-U</option><replaceable>package.i386.rpm</replaceable></userinput></para></listitem>

<listitem><para>If your system uses a different binary package format,
you need to read the instructions that came with your
system.</para></listitem>
</itemizedlist>

<para>If you cannot obtain a suitable precompiled binary package, you
will need to compile &kalarm; yourself from source files. Find the
source package file <filename>kdepim2.tar.gz</filename> or
<filename>kalarm.tar.gz</filename> (or similar), depending on whether
you want to install kdepim or just &kalarm;.  Unpack it in a new
directory, change to that directory and enter the following:</para>

&install.compile.documentation;

</sect1>

<sect1 id="configuration">
<title>Configuration</title>

<para>No special configuration is required to set up &kalarm;. Once
you have run &kalarm; for the first time, the alarm daemon will start
every time you log in, in order to monitor scheduled alarms.</para>

</sect1>

</appendix>

&documentation.index;
</book>
<!--
Local Variables:
mode: sgml
sgml-minimize-attributes:nil
sgml-general-insert-case:lower
sgml-indent-step:0
sgml-indent-data:nil
End:
-->
