dnl Check to see if pisock header and library are available


dnl This will be (re)defined to whatever we need to get the
dnl pilot-link library linked and working (if possible).
dnl
LIBPISOCK=""
LIBPISOCK_PATH=""

dnl A list of dirs to try for include files and the library
dnl
include_dirs="/usr/include /usr/include/libpisock /usr/local/include/libpisock /usr/local/include"


AC_MSG_CHECKING(for pilot-link headers)


dnl check for the headers first
dnl
HAVE_PISOCK=0
AC_CHECK_HEADER(pi-file.h,[HAVE_PISOCK=1
	AC_MSG_RESULT(found)], )

if test "$HAVE_PISOCK" = "0" ; then
	for i in $include_dirs ; do
		if test -r $i/pi-file.h; then
			HAVE_PISOCK=1
			LIBPISOCK_PATH="$i"
			AC_MSG_RESULT(found)
			break
		fi
	done
fi

dnl warn if no headers found
dnl
if  test "$HAVE_PISOCK" = "0" ; then
	AC_MSG_WARN([KPILOT: no pilot-link headers found.])
fi

if test "$HAVE_PISOCK" = "1" ; then
	HAVE_PISOCK=0
	ac_save_cppflags="$CPPFLAGS"
	for pisock_libs in "pisock" "socket" "xnet" "socket -lxnet" ; do
		AC_CHECK_LIB("$pisock_libs",
			pi_accept,
			[LIBPISOCK="-l$pisock_libs"
			HAVE_PISOCK=1
			break
			],
			[])
	done
	CPPFLAGS="$ac_save_cppflags"
fi

if test "$HAVE_PISOCK" = "0" ; then
  AC_MSG_WARN([KPILOT: pisock library not found])
  DO_NOT_COMPILE="$DO_NOT_COMPILE kpilot"
else
  if test "$LIBPISOCK_PATH" = "" ; then
	LIBPISOCK_PATH="/usr/include";
  fi
  AC_MSG_RESULT([found])
  AC_SUBST(LIBPISOCK)
  AC_SUBST(LIBPISOCK_PATH)
fi



DO_NOT_COMPILE="$DO_NOT_COMPILE kpilot"
