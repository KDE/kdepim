dnl Configure.in.in for KPilot.
dnl
dnl Copyright (C) 2000,2001 Adriaan de Groot
dnl
dnl This file is released under the terms of the Gnu General Public
dnl Licence (GPL) Version 2.

dnl
dnl Check to see if pisock header and library are available
dnl

dnl
dnl Questions and comments can be sent to groot@kde.org
dnl

dnl Check for the headers first. The first test is the somewhat-
dnl sophisticated one AC uses, and incorporates all the extra-includes
dnl and whatnot stuff.
dnl
dnl We need to explicitly use the --with-extra-includes passed in,
dnl since AC_CHECK_HEADER does not do so.
dnl
HAVE_PISOCK=0

kpilot_save_cflags="$CPPFLAGS"
kpilot_save_ldflags="$LDFLAGS"

CPPFLAGS="$CPPFLAGS $all_includes"
LDFLAGS="$LDFLAGS $all_libraries"

PISOCK_LIB=""
PISOCK_INCLUDE=""

AC_CHECK_HEADER(pi-file.h,[HAVE_PISOCK=1], )



dnl Warn if no headers found. Maybe this should be collected at the end
dnl of the build as well, like other this-won't-be-built messages?
dnl
dnl If we do have the headers, try to link against the library. On some
dnl platforms, notably Solaris, this requires some extra linkage against
dnl -lsocket -lxnet. That leads us to some deeply nested AC_CHECK_LIB
dnl calls, and NOTE the yuckiness when assigning values to PISOCK_LIB.
dnl
if  test "$HAVE_PISOCK" = "0" ; then
	AC_MSG_CHECKING([for pi-file.h alternate])
	for i in /usr/local/pilot/include /usr/local/include /vol/kde/support/include /usr/include/libpisock ; do
		test -f $i/pi-file.h && HAVE_PISOCK=1
		test -f $i/pi-file.h && PISOCK_INCLUDE="-I$i"
	done


	if test "$HAVE_PISOCK" = "0" ; then
		AC_MSG_WARN([KPILOT: no pilot-link headers found.])
	else
		AC_MSG_RESULT([found $PISOCK_INCLUDE])
	fi
fi

if test "$HAVE_PISOCK" = "1" ; then
	HAVE_PISOCK=0

	AC_CHECK_LIB(pisock,
		pi_accept,
		[PISOCK_LIB="-lpisock"
		HAVE_PISOCK=1
		],
		[
		unset ac_cv_lib_pisock_pi_accept
		AC_CHECK_LIB(pisock,
			pi_accept,
			[PISOCK_LIB="-lpisock -lsocket"
			HAVE_PISOCK=1
			],
			[
			unset ac_cv_lib_pisock_pi_accept
			AC_CHECK_LIB(pisock,
				pi_accept,
				[PISOCK_LIB="-lpisock -lsocket -lxnet"
				HAVE_PISOCK=1
				],
				[HAVE_PISOCK=0],
				[-lsocket -lxnet]
				)
			],
			[-lsocket]
			)
		]
		)
fi

dnl Run through the loop *anyway*, even if we've already found
dnl the library. The inner if makes sure that we only check until
dnl we've found the library once.
dnl
dnl
for i in /usr/local/pilot/lib /usr/local/lib /vol/kde/support/lib ; do
	if test "$HAVE_PISOCK" = "0" ; then
		CPPFLAGS="$kpilot_save_cflags  $all_includes $PISOCK_INCLUDE"
		LDFLAGS="$kpilot_save_ldflags  $all_libraries -L$i -R$i"

		unset ac_cv_lib_pisock_pi_accept
		AC_CHECK_LIB(pisock,pi_accept,
			[PISOCK_LIB="-L$i -R$i -lpisock"
			HAVE_PISOCK=1],[],[])
	fi
done

if test "$HAVE_PISOCK" = "0" ; then
	AC_MSG_WARN([KPILOT: pisock library not found])
	DO_NOT_COMPILE="$DO_NOT_COMPILE kpilot"
fi

AC_SUBST(PISOCK_LIB)
AC_SUBST(PISOCK_INCLUDE)


CPPFLAGS="$kpilot_save_cflags"
LDFLAGS="$kpilot_save_ldflags"
unset kpilot_save_cflags
unset kpilot_save_ldflags
