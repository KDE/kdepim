KPilot Developer's notes for november 19th 2000
===============================================

Fixes:

* Added most of Heiko's patches to the vcal-conduit
* Added convention to conduits --info handling: return "<none>" for
  no databases. Handled in conduitSetup as well.
* Made some minor changes to the info page presented in dialogs
  (generally the setup dialog of a conduit) so that it gracefully
  handles weird settings and handles its own resizing properly.
* Added some const-qualifiers to various char *s
* Add a "kill daemon on exit" feature -- there was already some code
  for this, but not complete.
* Changed all the boolean config entries to booleans as opposed to
  0-or-1 ints.
* Removed all the "const char * id defined but not used" warnings
* Added some extra robustness in PilotDaemon::setupConnections
* Made the daemon obey the "show in system tray" setting -- this was
  broken during the first port to KDE2
* Handle reconfiguration through the settings dialog properly -- 
  at least KPilot picks up the changes to "Kill Daemon on Exit"
* (re)Added --test option to conduits, though not all of them
  will support actual tests.
* KNotes conduit is now functional in the sense that notes you write
  on your desktop are in fact copied to the Pilot. 

Some general comments:

* Suggestion: call the desktop files for conduits
	conduit-pilot-appname.desktop
  and the conduit executables themselves
  	conduit-pilot-Appname
  This at least gives conduits some consistent naming scheme and
  the addition of -pilot leaves some namespace for conduits for
  other PDA's.

  Well, actually this naming scheme isn't much good. But we *do*
  need to think about how to handle sync-programs for various
  PDA's in a nice fashion -- I can imagine having a Nokia phone,
  a Psion and a Pilot and wanting to sync them all.

Still on the todo-list:

* Fix bad repeat-n-times handling in vcal-conduit
* Dealing with the rest of Heiko's patches
	- Some phone number magic I don't understand yet
	- Some changes in the address import function
	- Fast-sync capability (this is different from SyncLast)
	- getShowPhone() -- don't understand that yet either
* More and better information in the progress bar
* The PilotMemo class is butt-ugly and filled with weird C-string
  manipulations.


KPilot Developer's notes for november 14th 2000
===============================================

Lots of things have changed in the class hierarchy.

* Jorg's bug in the memo-import function was handled OK in addressWidget,
  but it seemed clumsy to deal with the same problem in two different
  places. Moved findSelectedCategory() to PilotComponent. Added some
  other convenience functions there for the category combo box.

* The getConfig() change was very poorly done, sorry about that.
  Added some (semi-) bizarre debugging functions into options.{h,cc}
  that are #ifdeffed out.

* Ditched all the #ifdef KDE2 stuff and dropped the KDE1 backport.

* Added a .desktop file for the NULL conduit (with some translations
  of my own)

* Added Qt2 layout code to the address and memo widgets so that they 
  become easier to i18n() (ie. they display properly when the string
  lengths change).

* Adopted some of Heiko's patches:
	- New feature ForceFirst causes every conduit to behave 
	  as if FirstTime=true every time (this is off by default,
	  which matches previous behavior)
	- New feature SyncLastPC causes a slow sync if the Pilot
	  is synced with a different PC than the last time it
	  was synced (this is on by default, matching old behavior)
	- "fixed" font in address and memo editor replaced by the
	  user's system preference
	- In some cases the title (first name+last name or something
	  similar) in an address was empty. This now gives the title 
	  [unknown]
	- Similar for memos

Let's sum up the current wishlist:

* KNotes conduit
* Dealing with the rest of Heiko's patches
	- Proper multi-day appointments in the vcal conduit
	- Some phone number magic I don't understand yet
	- Some changes in the address import function
	- Fast-sync capability (this is different from SyncLast)
	- getShowPhone() -- don't understand that yet either
  These patches are quite useful but it takes a lot of work to
  unsnarl them, which is why they're taking so long.



Developer's notes for november 9th 2000
=======================================

What's new? Lots of little bugs found by code review, some new (trivial?)
features. KPilot 4 is in Mandrake cooker so it receives a little more 
attention now than before.

* Jorg Habenicht found a bug in the memo-import function. It causes
  array-bounds overruns. The same bug was present in many other parts
  of the memo widget. I think I got them all.

* Added some robustness checking in the daemon to cover weird cases
  like running conduits by hand.

* Added better handling of the "first time" dialog in the vcal conduit.

* The NULL-conduit now has an extra configuration field "Databases" which
  you can attach it to. This allows you to do a bogus conduit sync with
  a database (almost equivalent to putting it in the "backup only" entry
  of the global KPilot settings, except you run the external conduit.

* Made KPilotLink::getConfig return a reference instead of a pointer, to
  avoid new()ing and delete()ing the config data structure all the time.
  I hope this increases consistency as well. This has caused lots of
  little type changes throughout the conduit system, so third-party
  conduit authors beware :) -- all the changes cause compile failures though.

* Jorg brought in a patch so that KPilot uses the pilot-link environment
  variables to set initial values.


Some wishlist-style items:

* The memo and address internal conduits are (a) ugly and (b) impossible
  to i18n properly, because they have hard-coded sizes. Need to spend some
  time cleaning that up.

* Really, it's time to write a conduit that syncs with KNotes. It's
  not that hard, but KNotes has some silly bugs that need fixing first :(

* A patch to introduce a notion of "fast sync" has been produced for 
  KPilot 3.2.1 -- we're now looking into how to integrate that into
  the KPilot 4.x series. The idea is you only run a sync on the databases
  you have a conduit for.

Developer's notes for october 29th 2000
=======================================

* Thomas Zander pointed out that KPilot doesn't write a config file
  the first time it is run, leading it to *still* believe it's the
  first time it's run the next time. Fixed.

* In PilotDaemon::setupConnections() things have been reorganized so that
  a failure on opening the Pilot device will not allow KPilot to start.

* Added an undocumented Debug= entry to conduit's configuration, to
  ease debugging. Conduits will have to read this themselves.

* Added a "Run KPilot" menu item to the daemon.

And there's some really strange behavior that I've noticed: when I run
the setup for an external conduit -- which is a separate process --
KPilot always "jumps in front" of that conduits setup dialog when I 
give KPilot the focus. This is very irritating.

Bugs noted still remaining:

* Much weirdness in conduit startup (mode must be set before running
  the conduit's constructor, but mode wasn't set till after) has been 
  looked at but not repaired.

* The vcal-conduit had trouble running a sync the first time (you really
  should do a backup instead). We're working on this one.

  

Developer's notes for october 26th 2000
=======================================

OK, I admit it:

	code,commit,announce,test

is the *wrong* way to do things. I made some mistakes in the code that
looks up conduits in the .desktop files, so conduits *still* won't run
with this morning's commits. This has been fixed now, and the conduits
run. Of course, vcalconduit just SIGSEGV'ed on me, so ...

This brings me to a couple of wishlist items for KPilot:

* A "Cancel" button. I just clicked on Backup when I was aiming for
  HotSync, and there's nothing I can do about it.

* A timeout when running conduits so that badly behaved conduits don't
  hang up the KPilot system.

Some other minor issues have been fixed as well:

* Boatloads of compiler warnings in the included .xpm files
* Some i18n stuff

And new questions raised for people who know the code (I'm thinking
Preston or Cornelius may be able to explain):

* vcal-conduit.cc line 522, what's the purpose of voStatus there?               



Developer's notes for october 23rd 2000
=======================================

It's been a week where I couldn't bring myself to tackle
really big problems, like an address-book conduit for
kab or pine. So I sat back and polished things, wandered
through the code finding little bugs (if I was an OpenBSD
kinda guy I'd call it a proactive code audit). This has
led to:

A whole slew of minor fixes:

* Updated Help menu in main menu bar
* Removed superfluous about tab in kpilot setup dialog
* Fixed config-doesn't-change bug
* Disable autostart-daemon option if .desktop file unavailable
* Added quit icon into file menu
* Added hotsync and backup icons into file menu
* Cleaned up include files in conduitSetup.h
* Cleaned up dialog code in conduitSetup.cc for KDE2 compliance
* Fixed conduits-not-running-during-sync bug in kpilotlink.cc
* Fixed a minor Qt2 incompatibility in messageDialog.cc
* Fixed some i18n issues in kpilotlink.cc
* Replaced sprintf stuff with QString operations in kpilotlink.cc
* Added hot-sync to file menu for consistency (it's in the toolbar)
* Added logic in showTitlePage in kpilot.cc to reduce flicker

Some remaining issues:

* The icon for "About KPilot" in the help menu is the wrong one
* We still need pretty icons for various things (like external conduits)

Some questions:

* Is there a memory leak with the config file in kpilotOptions.cc?
* Do we really want to be new() and delete()ing the config file so
  often? Perhaps getConfig() should do some caching.
* Should we add icons for the other menu items?
* Is there an entry iterator in KConfig so that you can iterate over
  entries in a certain group (and possibly delete them?)

Some philosophical stuff:

* Maybe it's time to ditch the internal conduits altogether and work
  on external conduits for kab and knotes? Although that would still
  leave the file installer. Maybe a splash of the kpilot logo and then
  an icon view of what has been dropped into the file installer?



As far as I can tell KPilot 4 now has the same functionality and bugs
as KPilot 3.2.1 did (with some polishing). So you still have to be
careful with KOrganizer. But I think the framework is sufficiently 
OK to make it worthwhile to really write some conduits for various
KDE 2 apps. Like a kab conduit and a knotes conduit.
