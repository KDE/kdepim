# Makefile.in generated by automake 1.7.2 from Makefile.am.
# Generated automatically from Makefile.in by config.pl.
# KDE tags expanded automatically by am_edit - $Revision$ 
# 

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



### Makefile.am for kpilot/conduits/ProjectManagerConduits
###
### $Id$
###
###
### Makefile for the Project manager conduit lib.
###

srcdir = .
top_srcdir = ../../../..
VPATH = .
pkgdatadir = $(datadir)/kdepim
pkglibdir = $(libdir)/kdepim
pkgincludedir = $(includedir)/kdepim
top_builddir = ../../../..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c -p
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
target_triplet = i686-pc-linux-gnu
ACLOCAL = ${SHELL} /local/home/reinhold/CVS_KDE/kdepim/admin/missing --run aclocal-1.7
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /local/home/reinhold/CVS_KDE/kdepim/admin/missing --run tar
ARTSCCONFIG = /opt/kde3/bin/artsc-config
AUTOCONF = ${SHELL} /local/home/reinhold/CVS_KDE/kdepim/admin/missing --run autoconf
AUTODIRS = 
AUTOHEADER = ${SHELL} /local/home/reinhold/CVS_KDE/kdepim/admin/missing --run autoheader
AUTOMAKE = ${SHELL} /local/home/reinhold/CVS_KDE/kdepim/admin/missing --run automake-1.7
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -ansi -W -Wall -pedantic -Wchar-subscripts -Wshadow -Wpointer-arith -Wmissing-prototypes -Wwrite-strings -D_XOPEN_SOURCE=500 -D_BSD_SOURCE -O2   -Wformat-security -Wmissing-format-attribute
CONF_FILES =  $(top_srcdir)/./admin/configure.in.min $(top_srcdir)/configure.in.in $(top_srcdir)/./kalarm/configure.in.in $(top_srcdir)/./karm/configure.in.in $(top_srcdir)/./kioslaves/sieve/configure.in.in $(top_srcdir)/./kitchensync/configure.in.in $(top_srcdir)/./korganizer/configure.in.in $(top_srcdir)/./kpilot/conduits/configure.in.in $(top_srcdir)/./kpilot/conduits/JPilotPluginProxy/configure.in.in $(top_srcdir)/./kpilot/configure.in.in $(top_srcdir)/./ksync/configure.in.in $(top_srcdir)/./ktnef/configure.in.in $(top_srcdir)/./libkpimexchange/configure.in.in
CPP = gcc -E
CPPFLAGS =  -DQT_THREAD_SUPPORT  -D_REENTRANT
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -Wnon-virtual-dtor -Wno-long-long -Wundef -Wall -pedantic -W -Wpointer-arith -Wmissing-prototypes -Wwrite-strings -ansi -D_XOPEN_SOURCE=500 -D_BSD_SOURCE -Wcast-align -Wconversion -Wchar-subscripts -O2 -Wformat-security -Wmissing-format-attribute -fno-exceptions -fno-check-new -fno-common
CYGPATH_W = echo
DCOPIDL = /opt/kde3/bin/dcopidl
DCOPIDL2CPP = /opt/kde3/bin/dcopidl2cpp
DCOP_DEPENDENCIES = $(DCOPIDL)
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOXYGEN = /usr/bin/doxygen
DOXYGEN_PROJECT_NAME = The KDE-PIM API Reference
DOXYGEN_PROJECT_NUMBER = Version 3.1.0
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
FRAMEWORK_COREAUDIO = 
GLIB_INCLUDE = -I/usr/include/glib-1.2
GLIB_LIB = -lglib
GMSGFMT = /usr/bin/msgfmt
GTK_INCLUDE = 
GTK_LIB = 
HAVE_BROKEN_TIMSIEVED = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL} $(INSTALL_STRIP_FLAG)
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
KDECONFIG = /opt/kde3/bin/kde-config
KDE_EXTRA_RPATH = 
KDE_HAS_DOXYGEN = yes
KDE_HAVE_DOT = YES
KDE_INCLUDES = -I/opt/kde3/include
KDE_LDFLAGS = -L/opt/kde3/lib
KDE_MT_LDFLAGS = 
KDE_MT_LIBS = -lpthread
KDE_PLUGIN = -avoid-version -module -no-undefined $(KDE_RPATH) $(KDE_MT_LDFLAGS)
KDE_RPATH = -R $(kde_libraries) -R $(x_libraries)
KDE_USE_CLOSURE_FALSE = #
KDE_USE_CLOSURE_TRUE = 
KDE_USE_FINAL_FALSE = 
KDE_USE_FINAL_TRUE = #
KDE_XSL_STYLESHEET = /opt/kde3/share/apps/ksgmltools2/customization/kde-chunk.xsl
LDFLAGS = 
LEX = flex
LEXLIB = -lfl
LEX_OUTPUT_ROOT = lex.yy
LIBCOMPAT = 
LIBCRYPT = -lcrypt
LIBDL = -ldl
LIBJPEG = -ljpeg
LIBOBJS = 
LIBPNG = -lpng -lz -lm
LIBPTHREAD = -lpthread
LIBRESOLV = -lresolv
LIBS = 
LIBSM = -lSM -lICE
LIBSOCKET = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool --silent
LIBUCB = 
LIBUTIL = -lutil
LIBXSS = -lXext -lXss
LIBZ = -lz
LIB_KAB = -lkab
LIB_KABC = -lkabc
LIB_KDECORE = -lkdecore
LIB_KDEPRINT = -lkdeprint
LIB_KDEUI = -lkdeui
LIB_KFILE = -lkio
LIB_KFM = 
LIB_KHTML = -lkhtml
LIB_KIO = -lkio
LIB_KPARTS = -lkparts
LIB_KSPELL = -lkspell
LIB_KSYCOCA = -lkio
LIB_POLL = 
LIB_QPE = 
LIB_QT = -lqt-mt  $(LIBPNG) -lXext $(LIB_X11) $(LIBSM) -lpthread
LIB_SMB = -lsmb
LIB_X11 = -lX11 $(LIBSOCKET)
LIB_XEXT = -lXext
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /local/home/reinhold/CVS_KDE/kdepim/admin/missing --run makeinfo
MAL_INCLUDE = -I/usr/local/include/mal
MAL_LIB = -lmal
MCOPIDL = /opt/kde3/bin/mcopidl
MEINPROC = /opt/kde3/bin/meinproc
MOC = /opt/qt-copy/bin/moc
MSGFMT = /usr/bin/msgfmt
NOOPT_CFLAGS = -O0
NOOPT_CXXFLAGS =  -Wnon-virtual-dtor -Wno-long-long -Wundef -Wall -pedantic -W -Wpointer-arith -Wmissing-prototypes -Wwrite-strings -ansi -D_XOPEN_SOURCE=500 -D_BSD_SOURCE -Wcast-align -Wconversion -Wchar-subscripts  -Wformat-security -Wmissing-format-attribute -fno-exceptions -fno-check-new -fno-common
OBJEXT = o
PACKAGE = kdepim
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PISOCK_INCLUDE = 
PISOCK_LIB = -lpisock
QTDOCDIR = /opt/qt-copy/doc/html
QTE_NORTTI = 
QT_INCLUDES = -I/opt/qt-copy/include
QT_LDFLAGS = 
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
TOPSUBDIRS =  calendarsystem doc kabc kdgantt kfile-plugins kgantt kioslaves kmailcvt ktnef libical libkdenetwork mimelib libkcal certmanager knode kmail korn knotes karm libkdepim kpilot ksync kalarmd kandy kaddressbook libkpimexchange kalarm korganizer konsolekalendar kontact
UIC = /opt/qt-copy/bin/uic -L $(kde_widgetdir) -nounload
UIC_TR = tr2i18n
USER_INCLUDES = 
USER_LDFLAGS = 
USE_EXCEPTIONS = -fexceptions
USE_RTTI = 
USE_THREADS = 
VERSION = 3.1.0
WOVERLOADED_VIRTUAL = 
XGETTEXT = /usr/bin/xgettext
X_EXTRA_LIBS = 
X_INCLUDES = -I/usr/X11R6/include
X_LDFLAGS = -L/usr/X11R6/lib
X_PRE_LIBS = 
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_RANLIB = ranlib
ac_ct_STRIP = strip
all_includes = -I/opt/kde3/include -I/opt/qt-copy/include -I/usr/X11R6/include 
all_libraries = -L/usr/X11R6/lib -L/opt/kde3/lib 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__quote = 
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
calendarsystem_SUBDIR_included_FALSE = #
calendarsystem_SUBDIR_included_TRUE = 
certmanager_SUBDIR_included_FALSE = #
certmanager_SUBDIR_included_TRUE = 
datadir = ${prefix}/share
doc_SUBDIR_included_FALSE = #
doc_SUBDIR_included_TRUE = 
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
include_exchange_SUBDIR_FALSE = 
include_exchange_SUBDIR_TRUE = #
include_malconduit_FALSE = #
include_malconduit_TRUE = 
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /local/home/reinhold/CVS_KDE/kdepim/admin/install-sh
kabc_SUBDIR_included_FALSE = #
kabc_SUBDIR_included_TRUE = 
kaddressbook_SUBDIR_included_FALSE = #
kaddressbook_SUBDIR_included_TRUE = 
kalarm_SUBDIR_included_FALSE = #
kalarm_SUBDIR_included_TRUE = 
kalarmd_SUBDIR_included_FALSE = #
kalarmd_SUBDIR_included_TRUE = 
kandy_SUBDIR_included_FALSE = #
kandy_SUBDIR_included_TRUE = 
karm_SUBDIR_included_FALSE = #
karm_SUBDIR_included_TRUE = 
kde_appsdir = ${prefix}/share/applnk
kde_bindir = ${exec_prefix}/bin
kde_confdir = ${prefix}/share/config
kde_datadir = ${prefix}/share/apps
kde_htmldir = ${prefix}/share/doc/HTML
kde_icondir = ${prefix}/share/icons
kde_includes = /opt/kde3/include
kde_libraries = /opt/kde3/lib
kde_libs_htmldir = /opt/kde3/share/doc/HTML
kde_libs_prefix = /opt/kde3
kde_locale = ${prefix}/share/locale
kde_mimedir = ${prefix}/share/mimelnk
kde_moduledir = ${libdir}/kde3
kde_qtver = 3
kde_servicesdir = ${prefix}/share/services
kde_servicetypesdir = ${prefix}/share/servicetypes
kde_sounddir = ${prefix}/share/sounds
kde_styledir = ${libdir}/kde3/plugins/styles
kde_templatesdir = ${prefix}/share/templates
kde_wallpaperdir = ${prefix}/share/wallpapers
kde_widgetdir = /opt/kde3/lib/kde3/plugins/designer
kdgantt_SUBDIR_included_FALSE = #
kdgantt_SUBDIR_included_TRUE = 
kfile_plugins_SUBDIR_included_FALSE = #
kfile_plugins_SUBDIR_included_TRUE = 
kgantt_SUBDIR_included_FALSE = #
kgantt_SUBDIR_included_TRUE = 
kioslaves_SUBDIR_included_FALSE = #
kioslaves_SUBDIR_included_TRUE = 
kitchensync_SUBDIR_included_FALSE = 
kitchensync_SUBDIR_included_TRUE = #
kmail_SUBDIR_included_FALSE = #
kmail_SUBDIR_included_TRUE = 
kmailcvt_SUBDIR_included_FALSE = #
kmailcvt_SUBDIR_included_TRUE = 
knode_SUBDIR_included_FALSE = #
knode_SUBDIR_included_TRUE = 
knotes_SUBDIR_included_FALSE = #
knotes_SUBDIR_included_TRUE = 
konsolekalendar_SUBDIR_included_FALSE = #
konsolekalendar_SUBDIR_included_TRUE = 
kontact_SUBDIR_included_FALSE = #
kontact_SUBDIR_included_TRUE = 
korganizer_SUBDIR_included_FALSE = #
korganizer_SUBDIR_included_TRUE = 
korn_SUBDIR_included_FALSE = #
korn_SUBDIR_included_TRUE = 
kpilot_SUBDIR_included_FALSE = #
kpilot_SUBDIR_included_TRUE = 
ksync_SUBDIR_included_FALSE = #
ksync_SUBDIR_included_TRUE = 
ktnef_SUBDIR_included_FALSE = #
ktnef_SUBDIR_included_TRUE = 
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
libical_SUBDIR_included_FALSE = #
libical_SUBDIR_included_TRUE = 
libkcal_SUBDIR_included_FALSE = #
libkcal_SUBDIR_included_TRUE = 
libkdenetwork_SUBDIR_included_FALSE = #
libkdenetwork_SUBDIR_included_TRUE = 
libkdepim_SUBDIR_included_FALSE = #
libkdepim_SUBDIR_included_TRUE = 
libkpimexchange_SUBDIR_included_FALSE = #
libkpimexchange_SUBDIR_included_TRUE = 
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mimelib_SUBDIR_included_FALSE = #
mimelib_SUBDIR_included_TRUE = 
oldincludedir = /usr/include
prefix = /opt/kde3
program_transform_name = s,x,x,
qt_includes = /opt/qt-copy/include
qt_libraries = 
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
subdirs =  libical
sysconfdir = ${prefix}/etc
target = i686-pc-linux-gnu
target_alias = 
target_cpu = i686
target_os = linux-gnu
target_vendor = pc
x_includes = /usr/X11R6/include
x_libraries = /usr/X11R6/lib

INCLUDES = -I$(top_srcdir)/kpilot/lib -I$(top_srcdir)/libkcal \
	$(PISOCK_INCLUDE) $(all_includes)


#>- METASOURCES = AUTO


### If you must get debugging output on a platform where
### the libs are built without debugging support, define
### DEBUG_CERR. Define DEBUG to get debugging support anywhere.
###
### KDE_CXXFLAGS=-DDEBUG -DDEBUG_CERR
lib_LTLIBRARIES = libProjectsConduit.la 

#>- libProjectsConduit_la_SOURCES = DatabaseAction.cc DatabaseActionDialog.ui \
#>- 	DatabaseActiondlgPrivate.cpp MultiDB-conduit.cc MultiDB-conduitDialog.ui \
#>- 	MultiDB-factory.cc MultiDB-setup.cc MultiDBWidgetPrivate.cpp \
#>- 	Organizer-conduit.cc Organizer-factory.cc pilotOrganizerEntry.cc
#>+ 4
libProjectsConduit_la_SOURCES=DatabaseAction.cc  \
	DatabaseActiondlgPrivate.cpp MultiDB-conduit.cc  \
	MultiDB-factory.cc MultiDB-setup.cc MultiDBWidgetPrivate.cpp \
	Organizer-conduit.cc Organizer-factory.cc pilotOrganizerEntry.cc DatabaseActionDialog.cc MultiDB-conduitDialog.cc

libProjectsConduit_la_LDFLAGS = $(KDE_RPATH) -L$(top_srcdir)/kpilot/lib -L$(top_srcdir)/libkcal --no-undefined
libProjectsConduit_la_LIBADD = -lkpilot -lkcal 
subdir = kpilot/conduits/ProjectManagerConduits/lib
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(lib_LTLIBRARIES)

libProjectsConduit_la_DEPENDENCIES =
am_libProjectsConduit_la_OBJECTS = DatabaseAction.lo \
	DatabaseActiondlgPrivate.lo MultiDB-conduit.lo \
	MultiDB-factory.lo MultiDB-setup.lo MultiDBWidgetPrivate.lo \
	Organizer-conduit.lo Organizer-factory.lo \
	pilotOrganizerEntry.lo
#>- libProjectsConduit_la_OBJECTS = $(am_libProjectsConduit_la_OBJECTS)
#>+ 9
libProjectsConduit_la_final_OBJECTS = libProjectsConduit_la.all_cc.lo libProjectsConduit_la.all_cpp.lo 
libProjectsConduit_la_nofinal_OBJECTS = DatabaseAction.lo \
	DatabaseActiondlgPrivate.lo MultiDB-conduit.lo \
	MultiDB-factory.lo MultiDB-setup.lo MultiDBWidgetPrivate.lo \
	Organizer-conduit.lo Organizer-factory.lo \
	pilotOrganizerEntry.lo DatabaseActionDialog.lo MultiDB-conduitDialog.lo\
Organizer-factory.moc.lo DatabaseActiondlgPrivate.moc.lo MultiDBWidgetPrivate.moc.lo MultiDB-conduit.moc.lo Organizer-conduit.moc.lo 
libProjectsConduit_la_OBJECTS = $(libProjectsConduit_la_nofinal_OBJECTS)
#libProjectsConduit_la_OBJECTS = $(libProjectsConduit_la_final_OBJECTS)

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
#>- DEP_FILES = ./$(DEPDIR)/DatabaseAction.Plo \
#>- 	./$(DEPDIR)/DatabaseActiondlgPrivate.Plo \
#>- 	./$(DEPDIR)/MultiDB-conduit.Plo \
#>- 	./$(DEPDIR)/MultiDB-factory.Plo \
#>- 	./$(DEPDIR)/MultiDB-setup.Plo \
#>- 	./$(DEPDIR)/MultiDBWidgetPrivate.Plo \
#>- 	./$(DEPDIR)/Organizer-conduit.Plo \
#>- 	./$(DEPDIR)/Organizer-factory.Plo \
#>- 	./$(DEPDIR)/pilotOrganizerEntry.Plo
#>+ 19
#DEP_FILES =  $(DEPDIR)/DatabaseActionDialog.P $(DEPDIR)/MultiDB-conduitDialog.P $(DEPDIR)/Organizer-factory.moc.P $(DEPDIR)/DatabaseActiondlgPrivate.moc.P $(DEPDIR)/MultiDBWidgetPrivate.moc.P $(DEPDIR)/MultiDB-conduit.moc.P $(DEPDIR)/Organizer-conduit.moc.P  $(DEPDIR)/libProjectsConduit_la.all_cc.P $(DEPDIR)/libProjectsConduit_la.all_cpp.P  ./$(DEPDIR)/DatabaseAction.Plo \
#		./$(DEPDIR)/DatabaseActiondlgPrivate.Plo \
#		./$(DEPDIR)/MultiDB-conduit.Plo \
#		./$(DEPDIR)/MultiDB-factory.Plo \
#		./$(DEPDIR)/MultiDB-setup.Plo \
#		./$(DEPDIR)/MultiDBWidgetPrivate.Plo \
#		./$(DEPDIR)/Organizer-conduit.Plo \
#		./$(DEPDIR)/Organizer-factory.Plo \
#		./$(DEPDIR)/pilotOrganizerEntry.Plo
DEP_FILES =  $(DEPDIR)/DatabaseActionDialog.P $(DEPDIR)/MultiDB-conduitDialog.P $(DEPDIR)/Organizer-factory.moc.P $(DEPDIR)/DatabaseActiondlgPrivate.moc.P $(DEPDIR)/MultiDBWidgetPrivate.moc.P $(DEPDIR)/MultiDB-conduit.moc.P $(DEPDIR)/Organizer-conduit.moc.P  ./$(DEPDIR)/DatabaseAction.Plo \
		./$(DEPDIR)/DatabaseActiondlgPrivate.Plo \
		./$(DEPDIR)/MultiDB-conduit.Plo \
		./$(DEPDIR)/MultiDB-factory.Plo \
		./$(DEPDIR)/MultiDB-setup.Plo \
		./$(DEPDIR)/MultiDBWidgetPrivate.Plo \
		./$(DEPDIR)/Organizer-conduit.Plo \
		./$(DEPDIR)/Organizer-factory.Plo \
		./$(DEPDIR)/pilotOrganizerEntry.Plo

#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
#>- 	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
#>- 	$(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
#>- 	$(AM_LDFLAGS) $(LDFLAGS) -o $@
#>+ 2
CXXLINK = $(LIBTOOL) --mode=link --tag=CXX $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(libProjectsConduit_la_SOURCES)
DIST_COMMON = Makefile.am Makefile.in
SOURCES = $(libProjectsConduit_la_SOURCES)

#>- all: all-am
#>+ 1
all: docs-am  all-am

.SUFFIXES:
.SUFFIXES: .cc .cpp .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --gnu  kpilot/conduits/ProjectManagerConduits/lib/Makefile
#>+ 3
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  kpilot/conduits/ProjectManagerConduits/lib/Makefile
	cd $(top_srcdir) && perl admin/am_edit kpilot/conduits/ProjectManagerConduits/lib/Makefile.in
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
libLTLIBRARIES_INSTALL = $(INSTALL)
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p"; \
	  $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" = "$$p" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
#>- libProjectsConduit.la: $(libProjectsConduit_la_OBJECTS) $(libProjectsConduit_la_DEPENDENCIES) 
#>+ 2
libProjectsConduit.la: libProjectsConduit.la.closure $(libProjectsConduit_la_OBJECTS) $(libProjectsConduit_la_DEPENDENCIES) 
#libProjectsConduit.la: $(libProjectsConduit_la_OBJECTS) $(libProjectsConduit_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libProjectsConduit_la_LDFLAGS) $(libProjectsConduit_la_OBJECTS) $(libProjectsConduit_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/DatabaseAction.Plo
include ./$(DEPDIR)/DatabaseActiondlgPrivate.Plo
include ./$(DEPDIR)/MultiDB-conduit.Plo
include ./$(DEPDIR)/MultiDB-factory.Plo
include ./$(DEPDIR)/MultiDB-setup.Plo
include ./$(DEPDIR)/MultiDBWidgetPrivate.Plo
include ./$(DEPDIR)/Organizer-conduit.Plo
include ./$(DEPDIR)/Organizer-factory.Plo
include ./$(DEPDIR)/pilotOrganizerEntry.Plo

distclean-depend:
	-rm -rf ./$(DEPDIR)

.cc.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cc.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

.cc.lo:
	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=yes \
#	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

.cpp.lo:
	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=yes \
#	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 4
KDE_DIST=MultiDB-conduit.cc pilotOrganizerEntry.h MultiDB-conduit.h DatabaseActionDialog.ui MultiDBWidgetPrivate.h Organizer-factory.cc MultiDB-conduitDialog.ui MultiDB-factory.h DatabaseActiondlgPrivate.cpp MultiDB-factory.cc MultiDB-setup.h MultiDBWidgetPrivate.cpp pilotOrganizerEntry.cc Organizer-factory.h Organizer-conduit.h MultiDB-setup.cc DatabaseAction.h Organizer-conduit.cc DatabaseActiondlgPrivate.h 

DISTFILES= $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)


top_distdir = ../../../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(libdir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-am
#>+ 1
clean: kde-rpo-clean  clean-am

#>- clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
#>- 	mostlyclean-am
#>+ 2
clean-am: clean-metasources clean-ui clean-closures clean-final  clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am: install-libLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am uninstall-libLTLIBRARIES

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-depend distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am info \
	info-am install install-am install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-libLTLIBRARIES install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-info-am \
	uninstall-libLTLIBRARIES

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 8
libProjectsConduit.la.closure: $(libProjectsConduit_la_OBJECTS) $(libProjectsConduit_la_DEPENDENCIES)
	@echo "int main() {return 0;}" > libProjectsConduit_la_closure.cc
	@$(LTCXXCOMPILE) -c libProjectsConduit_la_closure.cc
	$(CXXLINK) libProjectsConduit_la_closure.lo $(libProjectsConduit_la_LDFLAGS) $(libProjectsConduit_la_OBJECTS) $(libProjectsConduit_la_LIBADD) $(LIBS)
	@rm -f libProjectsConduit_la_closure.* libProjectsConduit.la.closure
	@echo "timestamp" > libProjectsConduit.la.closure


#>+ 27
DatabaseActionDialog.cc: $(srcdir)/DatabaseActionDialog.ui DatabaseActionDialog.h DatabaseActionDialog.moc
	rm -f DatabaseActionDialog.cc
	echo '#include <klocale.h>' > DatabaseActionDialog.cc
	$(UIC) -tr ${UIC_TR} -i DatabaseActionDialog.h $(srcdir)/DatabaseActionDialog.ui > DatabaseActionDialog.cc.temp ; ret=$$?; \
	sed -e "s,${UIC_TR}( \"\" ),QString::null,g" DatabaseActionDialog.cc.temp | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | sed -e "s,image\([0-9][0-9]*\)_data,img\1_DatabaseActionDialog,g" >> DatabaseActionDialog.cc ;\
	rm -f DatabaseActionDialog.cc.temp ;\
	if test "$$ret" = 0; then echo '#include "DatabaseActionDialog.moc"' >> DatabaseActionDialog.cc; else rm -f DatabaseActionDialog.cc ; exit $$ret ; fi

DatabaseActionDialog.h: $(srcdir)/DatabaseActionDialog.ui
	$(UIC) -o DatabaseActionDialog.h $(srcdir)/DatabaseActionDialog.ui

DatabaseActionDialog.moc: DatabaseActionDialog.h
	$(MOC) DatabaseActionDialog.h -o DatabaseActionDialog.moc
MultiDB-conduitDialog.cc: $(srcdir)/MultiDB-conduitDialog.ui MultiDB-conduitDialog.h MultiDB-conduitDialog.moc
	rm -f MultiDB-conduitDialog.cc
	echo '#include <klocale.h>' > MultiDB-conduitDialog.cc
	$(UIC) -tr ${UIC_TR} -i MultiDB-conduitDialog.h $(srcdir)/MultiDB-conduitDialog.ui > MultiDB-conduitDialog.cc.temp ; ret=$$?; \
	sed -e "s,${UIC_TR}( \"\" ),QString::null,g" MultiDB-conduitDialog.cc.temp | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | sed -e "s,image\([0-9][0-9]*\)_data,img\1_MultiDB_conduitDialog,g" >> MultiDB-conduitDialog.cc ;\
	rm -f MultiDB-conduitDialog.cc.temp ;\
	if test "$$ret" = 0; then echo '#include "MultiDB-conduitDialog.moc"' >> MultiDB-conduitDialog.cc; else rm -f MultiDB-conduitDialog.cc ; exit $$ret ; fi

MultiDB-conduitDialog.h: $(srcdir)/MultiDB-conduitDialog.ui
	$(UIC) -o MultiDB-conduitDialog.h $(srcdir)/MultiDB-conduitDialog.ui

MultiDB-conduitDialog.moc: MultiDB-conduitDialog.h
	$(MOC) MultiDB-conduitDialog.h -o MultiDB-conduitDialog.moc

#>+ 3
MultiDB-factory.moc: $(srcdir)/MultiDB-factory.h
	$(MOC) $(srcdir)/MultiDB-factory.h -o MultiDB-factory.moc

#>+ 3
Organizer-factory.moc.cc: $(srcdir)/Organizer-factory.h
	$(MOC) $(srcdir)/Organizer-factory.h -o Organizer-factory.moc.cc

#>+ 3
DatabaseAction.moc: $(srcdir)/DatabaseAction.h
	$(MOC) $(srcdir)/DatabaseAction.h -o DatabaseAction.moc

#>+ 3
DatabaseActiondlgPrivate.moc.cc: $(srcdir)/DatabaseActiondlgPrivate.h
	$(MOC) $(srcdir)/DatabaseActiondlgPrivate.h -o DatabaseActiondlgPrivate.moc.cc

#>+ 3
MultiDBWidgetPrivate.moc.cc: $(srcdir)/MultiDBWidgetPrivate.h
	$(MOC) $(srcdir)/MultiDBWidgetPrivate.h -o MultiDBWidgetPrivate.moc.cc

#>+ 3
MultiDB-setup.moc: $(srcdir)/MultiDB-setup.h
	$(MOC) $(srcdir)/MultiDB-setup.h -o MultiDB-setup.moc

#>+ 3
MultiDB-conduit.moc.cc: $(srcdir)/MultiDB-conduit.h
	$(MOC) $(srcdir)/MultiDB-conduit.h -o MultiDB-conduit.moc.cc

#>+ 3
Organizer-conduit.moc.cc: $(srcdir)/Organizer-conduit.h
	$(MOC) $(srcdir)/Organizer-conduit.h -o Organizer-conduit.moc.cc

#>+ 3
clean-metasources:
	-rm -f  MultiDB-factory.moc Organizer-factory.moc.cc DatabaseAction.moc DatabaseActiondlgPrivate.moc.cc MultiDBWidgetPrivate.moc.cc MultiDB-setup.moc MultiDB-conduit.moc.cc Organizer-conduit.moc.cc

#>+ 5
clean-ui:
	-rm -f \
	DatabaseActionDialog.cc DatabaseActionDialog.h DatabaseActionDialog.moc \
	MultiDB-conduitDialog.cc MultiDB-conduitDialog.h MultiDB-conduitDialog.moc 

#>+ 3
clean-closures:
	-rm -f  libProjectsConduit.la.closure

#>+ 2
docs-am:

#>+ 6
force-reedit:
		cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  kpilot/conduits/ProjectManagerConduits/lib/Makefile
	cd $(top_srcdir) && perl admin/am_edit kpilot/conduits/ProjectManagerConduits/lib/Makefile.in


#>+ 9
bcheck: bcheck-am

bcheck-am:
	test ! -r bchecktest.cc.class || mv -f bchecktest.cc.class bchecktest.cc.oldclass
	@echo "int main() {return 0;}" > bchecktest.cc
	for i in $(include_HEADERS); do echo "#include \"$$i\"" >> bchecktest.cc; done 
	test ! -s bchecktest.cc || $(CXXCOMPILE) --dump-class-hierarchy bchecktest.cc
	test ! -s bchecktest.cc.oldclass || test ! -s bchecktest.cc.class || cmp -s bchecktest.cc.oldclass bchecktest.cc.class

#>+ 11
libProjectsConduit_la.all_cc.cc: $(srcdir)/Makefile.in $(srcdir)/DatabaseAction.cc $(srcdir)/MultiDB-conduit.cc $(srcdir)/MultiDB-factory.cc $(srcdir)/MultiDB-setup.cc $(srcdir)/Organizer-conduit.cc $(srcdir)/Organizer-factory.cc $(srcdir)/pilotOrganizerEntry.cc DatabaseActionDialog.cc MultiDB-conduitDialog.cc Organizer-conduit.moc.cc Organizer-factory.moc.cc DatabaseActiondlgPrivate.moc.cc MultiDBWidgetPrivate.moc.cc MultiDB-conduit.moc.cc  DatabaseAction.moc MultiDB-factory.moc MultiDB-setup.moc
	@echo 'creating libProjectsConduit_la.all_cc.cc ...'; \
	rm -f libProjectsConduit_la.all_cc.files libProjectsConduit_la.all_cc.final; \
	echo "#define KDE_USE_FINAL 1" >> libProjectsConduit_la.all_cc.final; \
	for file in DatabaseAction.cc MultiDB-conduit.cc MultiDB-factory.cc MultiDB-setup.cc Organizer-conduit.cc Organizer-factory.cc pilotOrganizerEntry.cc DatabaseActionDialog.cc MultiDB-conduitDialog.cc Organizer-conduit.moc.cc Organizer-factory.moc.cc DatabaseActiondlgPrivate.moc.cc MultiDBWidgetPrivate.moc.cc MultiDB-conduit.moc.cc ; do \
	  echo "#include \"$$file\"" >> libProjectsConduit_la.all_cc.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> libProjectsConduit_la.all_cc.final; \
	done; \
	cat libProjectsConduit_la.all_cc.final libProjectsConduit_la.all_cc.files > libProjectsConduit_la.all_cc.cc; \
	rm -f libProjectsConduit_la.all_cc.final libProjectsConduit_la.all_cc.files

#>+ 11
libProjectsConduit_la.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/DatabaseActiondlgPrivate.cpp $(srcdir)/MultiDBWidgetPrivate.cpp  DatabaseAction.moc MultiDB-factory.moc MultiDB-setup.moc
	@echo 'creating libProjectsConduit_la.all_cpp.cpp ...'; \
	rm -f libProjectsConduit_la.all_cpp.files libProjectsConduit_la.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> libProjectsConduit_la.all_cpp.final; \
	for file in DatabaseActiondlgPrivate.cpp MultiDBWidgetPrivate.cpp ; do \
	  echo "#include \"$$file\"" >> libProjectsConduit_la.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> libProjectsConduit_la.all_cpp.final; \
	done; \
	cat libProjectsConduit_la.all_cpp.final libProjectsConduit_la.all_cpp.files > libProjectsConduit_la.all_cpp.cpp; \
	rm -f libProjectsConduit_la.all_cpp.final libProjectsConduit_la.all_cpp.files

#>+ 3
clean-final:
	-rm -f libProjectsConduit_la.all_cc.cc libProjectsConduit_la.all_cpp.cpp

#>+ 2
final:
	$(MAKE) libProjectsConduit_la_OBJECTS="$(libProjectsConduit_la_final_OBJECTS)" all-am
#>+ 2
final-install:
	$(MAKE) libProjectsConduit_la_OBJECTS="$(libProjectsConduit_la_final_OBJECTS)" install-am
#>+ 2
no-final:
	$(MAKE) libProjectsConduit_la_OBJECTS="$(libProjectsConduit_la_nofinal_OBJECTS)" all-am
#>+ 2
no-final-install:
	$(MAKE) libProjectsConduit_la_OBJECTS="$(libProjectsConduit_la_nofinal_OBJECTS)" install-am
#>+ 3
cvs-clean:
	$(MAKE) admindir=$(top_srcdir)/admin -f $(top_srcdir)/admin/Makefile.common cvs-clean

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 16
$(srcdir)/Organizer-factory.cc: DatabaseActionDialog.h MultiDB-conduitDialog.h 
MultiDB-setup.lo: MultiDB-setup.moc 
$(srcdir)/MultiDB-setup.cc: DatabaseActionDialog.h MultiDB-conduitDialog.h 
$(srcdir)/MultiDB-factory.cc: DatabaseActionDialog.h MultiDB-conduitDialog.h 
$(srcdir)/MultiDB-conduit.cc: DatabaseActionDialog.h MultiDB-conduitDialog.h 
$(srcdir)/MultiDBWidgetPrivate.cpp: DatabaseActionDialog.h MultiDB-conduitDialog.h 
MultiDB-factory.o: MultiDB-factory.moc 
MultiDB-setup.o: MultiDB-setup.moc 
MultiDB-factory.lo: MultiDB-factory.moc 
DatabaseAction.o: DatabaseAction.moc 
$(srcdir)/pilotOrganizerEntry.cc: DatabaseActionDialog.h MultiDB-conduitDialog.h 
DatabaseAction.lo: DatabaseAction.moc 
$(srcdir)/DatabaseActiondlgPrivate.cpp: DatabaseActionDialog.h MultiDB-conduitDialog.h 
$(srcdir)/DatabaseAction.cc: DatabaseActionDialog.h MultiDB-conduitDialog.h 
$(srcdir)/Organizer-conduit.cc: DatabaseActionDialog.h MultiDB-conduitDialog.h 
