
Sorry for not providing decent information here. The basics are:

 For UNIX:
  
  1) run configure. If you want to install in someplace
     other the /usr/local, give configure an argument like '--prefix=/usr/pilot'
    
  2) run make
    
  3) play around, _carefully_. pilot-xfer is probably the most useful
     program for you, and also the safest.
     
  4) run 'make install' if you feel the need.

 For OS/2:
  
  1) run os2configure.cmd.
    
  2) runn make -f Makefile.os2
    
  3) play around, _carefully_. pilot-xfer is probably the most useful
     program for you, and also the safest.
     
Note on pilot-debug: this program is a work-in-progress, and requires Tcl
7.5 (or greater) and optionally Tk 4.1 (or greater) and/or Readline 2.0.
You'll need to modify Makefile to to use Readline 2.0, and if your Tcl or Tk
aren't in standard places, you'll need to wiggle configure or the Makefile.
You must have install pilot-link or else run pilot-debug in the pilot-link
source directory if you want the fancy images for the Remote UI window.

Basic program list, in no particular order:

    addresses: dump Palm address book into generic format

    ccexample: test program demonstrating C++ interface
    
    debugsh: command-line interface to Palm debug monitor

    dlpsh: command-line interface to Palm HotSync protocol

    getrom: program to fetch ROM using getrom.prc or getrom2.prc

    getrom.prc:  Palm program to help dump a 512K ROM 
    getrom2.prc: Palm program to help dump a 1024K ROM (used for OS 2.x)
    
    iambicexample: test program demonstrating C++ interface

    ietf2datebook: convert IETF calendar to format used by install-datebook

    install-datebook: import datebook records from a text format into Palm

    install-memo: import memo records from a text format into Palm

    install-todos: import todo records from a text format into Palm

    install-user: modify user name settings (and report lots of into) about Palm

    memos: export memos from Palm in mailbox format

    pi-csd: must be running to accept Network HotSync(tm) connects
    
    pi-getram: program that retrieves RAM from Palm
    
    pi-getrom: program that retrieves ROM from Palm (without getrom.prc)
    
    pi-nredir: program that accepts connections and redirects them via the Network HotSync(tm) protocol
    
    pi-port: experimental program to separate serial layer from pilot-link

    pilot-addresses: import and export address book

    pilot-clip: experimental program to import and export data from Palm clipboard
    
    pilot-debug: graphical and command-line program to interface with Palm debug monitor
    
    pilot-dedupe: strips duplicate records from Palm databases

    pilot-file: disect .prc and .pdb files

    pilot-mail: import mail from POP3 mailbox into Palm Pro's Mail application,
                and send mail via sendmail

    pilot-schlep: store a single file on the Palm
     
    pilot-undelete: turn archived records into normal records

    pilot-xfer: back up, restore, install & delete Palm databases (This is a very useful program)

    read-expenses: export Palm Pro expense database into text format

    read-ical: export Palm datebook and todo databases into an Ical calendar (ical is required)
    
    read-todos: export Palm todo database into generic text format

    reminders: export Palm datebook into a 'remind' data file

    sync-plan: completely synchronize the Palm datebook with the Plan calendar via netplan
    
    validate: experimental program to test C++ features

Usage notes:

  read-ical and sync-ical will only run if you have ical-2.x installed and
  in the path.

  sync-plan is a full syncronization program, though it has some interesting
  quirks and requirements. You must running netplan from plan-1.6.1
  (probably available at <http://www.in-berlin.de/User/bitrot>). Future or
  later versions may work, but I cannot gaurantee this. Sync-plan does _not_
  check the Palm's user name, so be very careful not to sync two Palms to
  the same Plan database. This will not work in a useful manner, at the
  moment. Sync-plan leaves a file, that has a name starting with
  "pilothash", in the current directory. This file must be present for all
  future syncs between that plan database and that Palm.
  
  As sync-plan is a work in progress, please contact me with any problems.
  
  The default connection rate is 9600 baud. You are welcome to try higher
  baud rates (19200, 38400, or 57600) by setting the PILOTRATE environment
  variable, but various machines have various limitations. (Be careful about
  38400 on a Linux box if you've been using setserial to change the
  multiplier.)
  
  pilot-mail (which requires a Palm with the new Mail application, as
  well as sendmail and/or a POP3 server) is still in the experimental stage. 
  Run with an argument of '-H' for help. While I don't expect it to lose
  data, (and by default mail is kept on both sides, not deleted) I can not
  and will not guarantee that you won't. Please back up your UNIX mailbox
  and Palm mailbox (via pilot-xfer) before experimenting.
  
  If you wish, you may easily change the default settings (pop host,
  password, etc.) for pilot-mail by editing the top of pilot-mail.c, as well
  as by setting the environment variables indicated in its help.
  
  Scott Grosch's "validate" program is included, and can be made via 'make
  validate', but it may not be of use to anyone but Scott.

Debugging notes:

  There are several defines mentioned in lib/Makefile that enabled different
  types of debugging information. 
  
  If you are having problems, it may help to generate a log of all serial
  transactions, which I can then parse and attempt to understand. To
  generate such a log, please set the PILOTLOG environment variable (it does
  not matter to what you set it.) This will cause any program using
  pilot-link to append to a log file called "PiDebug.log" in the current
  directory. You may choose another name or directory via the PILOTLOGFILE
  environment variable.
  
  Please mail me (kjahds@kjahds.com) such a log if you are having low-level
  failures.
  
Embedding information:

  As of 0.5.0, I've rearranged the headers slightly so that it should be
  easier and more reliable to use the libpisock.a library in external
  applications.
  
  If you want to use the pilot-link portability layer (configured via
  autoconf), then include pi-source.h. Otherwise, do not touch this file,
  as it sets up a mildly complex environment.
  
  For all normal operations, simply include the obvious files (pi-file for
  .pdb and .prc file access, pi-dlp for DLP sync functions, etc.). pi-macros
  contains the portable byte-access routines.

License notes:

  The utility programs (pilot-xfer, sync-plan, etc.) are licensed for use
  under the GPL. For more information, please see COPYING. The librarys
  (libpisock and libcc) and the interpreter bindings (Perl, Python, Java,
  and Tcl) are licensed for use under the LGPL. For more information, please
  see COPYING.LIB.
  
  All contained source is the copyright of its author(s). Please see the
  copyright notices in the individual files for more information.
  
Happy Hacking,
Kenneth Albanowski <kjahds@kjahds.com>
