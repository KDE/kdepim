#MIN_CONFIG(3.3)

AM_INIT_AUTOMAKE(kmobiletools, 0.4.92)
AC_C_BIGENDIAN
AC_CHECK_KDEMAXPATHLEN

###############################################################################
# BEGIN KONTACT CHECK
###############################################################################

AC_ARG_ENABLE(kontact, AC_HELP_STRING([--disable-kontact-plugin], [disable KMobileTools Kontact plugin (default: check)]),
	[enable_kontact=$enableval], [enable_kontact=yes])
if test "$enable_kontact" = "yes"; then
	KDE_CHECK_HEADER(kontact/plugin.h, [have_kontact="yes"], [have_kontact="no"])
	if test "$have_kontact" = "yes"; then
		AC_DEFINE(HAVE_KONTACT, 1, [have KONTACT])
	fi
fi

AM_CONDITIONAL(have_kontact, test x$have_kontact = xyes)

AC_ARG_ENABLE(libkcal, AC_HELP_STRING([--disable-libkcal], [disable KMobileTools KCalendar support (default: check)]),
	[enable_kcal=$enableval], [enable_kcal=yes])

if test "$enable_kcal" = "yes"; then
	KDE_CHECK_HEADER(libkcal/event.h, [have_kcal="yes"], [have_kcal="no"])
	if test "$have_kcal" = "yes"; then
		AC_DEFINE(HAVE_KCAL, 1, [have KCAL])
		LIB_KCAL="-lkcal"
	else
		LIB_KCAL=""
	fi
fi
AM_CONDITIONAL(have_kcal, test x$have_kcal = xyes)
AC_SUBST(LIB_KCAL)

AC_ARG_WITH(gammu, AC_HELP_STRING([--without-gammu], [Build kmobiletools without gammu engine (default: check)]),
	[with_gammu=$withval], [with_gammu=yes])
if test "$with_gammu" = "yes" && false ; then # gammu forced to disabled till it'll be completed
	KDE_CHECK_HEADER(gammu/gammu.h, [have_gammu="yes"], [have_gammu="no"])
	if test "$have_gammu" = "yes"; then
		AC_DEFINE(WITH_GAMMU, 1, [with GAMMU])
		LIB_GAMMU="-lGammu"
	else
		LIB_GAMMU=""
	fi
fi
AM_CONDITIONAL(have_gammu, test x$have_gammu = xyes)
AC_SUBST(LIB_GAMMU)

#KDE_CHECK_HEADER(gammu/gammu.h,
#    [
#      AC_DEFINE(HAVE_GAMMU, 1, [have Gammu])
#      LIB_GAMMU="-lGammu"
#      have_gammu=yes
#    ],
#    [
#      AC_DEFINE(HAVE_GAMMU, 0, [have Gammu])
#      LIB_GAMMU=""
#      have_gammu=no
#    ])

#AC_SUBST(LIB_GAMMU)
#AM_CONDITIONAL(with_gammu, test $have_gammu = yes)

KDE_CHECK_HEADER(p2kmoto.h, have_p2k=yes, have_p2k=no)
AM_CONDITIONAL(with_p2kmoto, test $have_p2k = yes)
KDE_CHECK_HEADER(obexftp/client.h, have_obexftp=yes, have_obexftp=no)
AM_CONDITIONAL(compile_obex, test $have_obexftp = yes)

if test "x$have_p2k" = "xyes"; then
	AC_DEFINE(HAVE_P2KLIB, 1, [p2k filesystem support])
	AC_SUBST(HAVE_P2KLIB)
fi

if test "x$have_obexftp" = "xyes"; then
	AC_DEFINE(HAVE_OBEXFTP, 1, [ObexFTP filesystem support])
	AC_SUBST(HAVE_OBEXFTP)
fi

# AC_ARG_ENABLE(kioslaves, AC_HELP_STRING([--enable-kioslaves], [enable KIOSlaves for filesystem access (default: disable)]),
#     [enable_kioslaves=$enableval], [enable_kioslaves=no])
if test "x$have_p2k" = "xyes" || test "x$have_obexftp" = "xyes"; then
    ENABLE_KIOSLAVES="yes";
    else ENABLE_KIOSLAVES="no";
fi

AM_CONDITIONAL(compile_kioslaves, test "x$ENABLE_KIOSLAVES" = "xyes" )
if test "x$ENABLE_KIOSLAVES" = "xyes"; then
    AC_DEFINE(ENABLE_FS, 1, [filesystem support])
    AC_SUBST(ENABLE_FS)
fi

AC_ARG_ENABLE(crashhandler, AC_HELP_STRING([--disable-crashhandler], [disable KMobileTools Crash Handler(default: enable)]),
    [enable_crashhandler=$enableval], [enable_crashhandler=yes])
if test "$enable_crashhandler" = "yes"; then
  AC_DEFINE(USE_CRASHHANDLER, 1, [use CrashHandler])
  AC_SUBST(USE_CRASHHANDLER)
fi

AC_ARG_ENABLE(tests, AC_HELP_STRING([--enable-tests], [enable test applications (default: disable)]),
    [enable_tests=$enableval], [enable_tests=no])
AM_CONDITIONAL(compile_tests, test x$enable_tests = xyes)

KDE_CHECK_HEADER(kdebluetooth/rfcommsocketdevice.h, have_kbluetooth=yes, have_kbluetooth=no)
AM_CONDITIONAL(with_kdebluetooth, test $have_kbluetooth = yes)
if test "$have_kbluetooth" = "yes"; then
	AC_DEFINE(KBLUETOOTH, 1, [use kdebluetooth rfcomm socket])
	AC_SUBST(KBLUETOOTH)
	LIB_KBLUETOOTH="-lkbluetooth"
fi
AC_SUBST(LIB_KBLUETOOTH)

SVNREV=`svn st -v $srcdir/kmobiletools | grep -v '?' | awk '{ print $1 }' | sort -rn | head -n 1`
AC_DEFINE_UNQUOTED( SVNREVISION, "$SVNREV", [Subversion revision] )

