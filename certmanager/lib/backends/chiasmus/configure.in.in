
dnl
dnl Check for chiasmus
dnl
AC_MSG_CHECKING([whether to compile Chiasmus support])
AC_ARG_ENABLE(chiasmus,
[AC_HELP_STRING([--enable-chiasmus],
                [Whether to include support for the Chiasmus encryption tool])],
[case "${enableval}" in
        yes)
                AC_MSG_RESULT([yes])
                AC_DEFINE(KLEO_CHIASMUS, 1, [Define to 1 if you want Chiasmus support])
                enable_chiasmus_support="yes"
                ;;
        no)
                AC_MSG_RESULT([no])
                ;;
        *)
                AC_MSG_ERROR([bad value ${enableval} for --enable-chiasmus])
                ;;
esac
], [AC_MSG_RESULT([no])])

AM_CONDITIONAL(compile_chiasmus, test "x$enable_chiasmus_support" = "xyes")






dnl
dnl Check for C99 designated initializers:
dnl
AC_LANG_SAVE
AC_LANG_C
AC_MSG_CHECKING([for C99 designated initializers])
AC_TRY_COMPILE([
        union { int one; const char * two } foo = { .two = "Hello" };
], [], [
        AC_DEFINE(HAVE_C99_INITIALIZERS, 1, [Define to 1 if your C compiler support C99 designated initializers])
        AC_MSG_RESULT([yes])
], [
        AC_MSG_RESULT([no])
])

AC_LANG_RESTORE
